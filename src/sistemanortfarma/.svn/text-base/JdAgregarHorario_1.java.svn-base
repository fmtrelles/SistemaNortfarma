package sistemanortfarma;


import CapaLogica.LogicaHorariosTrabajadores;
import entidad.Horario_Trabajo;
import entidad.Personal;
import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJDialog.java
 *
 * Created on 15-abr-2014, 19:23:49
 */

/**
 *
 * @author MAX
 */
public class JdAgregarHorario_1 extends javax.swing.JDialog {

    /** Creates new form NewJDialog */
    public JdAgregarHorario_1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.JspinnerCero();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtextbuscar = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        jSpinner1 = new javax.swing.JSpinner(sm);
        SpinnerDateModel sm2 =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        jSpinner2 = new javax.swing.JSpinner(sm2);
        SpinnerDateModel sm3 =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        jSpinner3 = new javax.swing.JSpinner(sm3);
        SpinnerDateModel sm4 =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        jSpinner4 = new javax.swing.JSpinner(sm4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Nuevo Horario"));

        jLabel1.setText("Apellidos");

        jtextbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextbuscarActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres", "Apellidos", "DNI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtextbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtextbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Hora Entrada :");

        jCheckBox2.setText("Turno 2");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Hora Salida :");

        jLabel3.setText("Hora Entrada :");

        jCheckBox1.setText("Turno 1");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Hora Salida :");

        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinner1,"HH:mm:ss");
        jSpinner1.setEditor(de);
        jSpinner1.setEnabled(false);
        jSpinner1.setFocusCycleRoot(true);

        JSpinner.DateEditor de2 = new JSpinner.DateEditor(jSpinner2,"HH:mm:ss");
        jSpinner2.setEditor(de2);
        jSpinner2.setEnabled(false);

        JSpinner.DateEditor de3 = new JSpinner.DateEditor(jSpinner3,"HH:mm:ss");
        jSpinner3.setEditor(de3);
        jSpinner3.setEnabled(false);

        JSpinner.DateEditor de4 = new JSpinner.DateEditor(jSpinner4,"HH:mm:ss");
        jSpinner4.setEditor(de4);
        jSpinner4.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addGap(165, 165, 165))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinner2)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinner4)))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()==true){
            jSpinner1.setEnabled(true);
            jSpinner2.setEnabled(true);
        }
        else {
            jSpinner1.setEnabled(false);
            jSpinner2.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(jTable1.getSelectedRow() < 0) {
           JOptionPane.showMessageDialog(null, "SELECCIONE UN TRABAJADOR \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            if(jCheckBox1.isSelected()==false ){
              JOptionPane.showMessageDialog(null, "Es Necesario que Ingrese Horarios \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
              return; 
            }
            String dni=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
            int p = JOptionPane.showConfirmDialog(null, "¿Esta seguro de Guardar este Horario? ", "Confirmar",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (p == JOptionPane.YES_OPTION) {
                if(ValidarHoras1()==false){
                    JOptionPane.showMessageDialog(null, "TURNO1 : Hora Entrada es mayor que Hora salida \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(ValidarHoras2()==false){
                    JOptionPane.showMessageDialog(null, "TURNO2 : Hora Entrada es mayor que Hora salida \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(ValidarTurnos()==false){
                    JOptionPane.showMessageDialog(null, "Hora Entrada Turno 2, es menor que Hora salida Turno 1 \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
                Horario_Trabajo ht=new Horario_Trabajo();
                Date f=(Date)jSpinner1.getModel().getValue();
                ht.setT1_H_Entrada(f.getHours()+":"+f.getMinutes()+":"+f.getSeconds());
                f=(Date)jSpinner2.getModel().getValue();
                ht.setT1_H_Salida(f.getHours()+":"+f.getMinutes()+":"+f.getSeconds());
                f=(Date)jSpinner3.getModel().getValue();
                if(jCheckBox2.isSelected()==false)
                    ht.setT2_H_Entrada("00:00:00");
                else ht.setT2_H_Entrada(f.getHours()+":"+f.getMinutes()+":"+f.getSeconds());
                f=(Date)jSpinner4.getModel().getValue();
                if(jCheckBox2.isSelected()==false)
                    ht.setT2_H_Salida("00:00:00");
                else ht.setT2_H_Salida(f.getHours()+":"+f.getMinutes()+":"+f.getSeconds());
                String cadena= lh.Nuevo_Horario_trabajo(dni, ht);
                JOptionPane.showMessageDialog(null,cadena );
                if(!cadena.equals("El usuario ya esta registrado"))
                    this.dispose();
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ListarPersonal(jtextbuscar.getText());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtextbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextbuscarActionPerformed
        ListarPersonal(jtextbuscar.getText());
    }//GEN-LAST:event_jtextbuscarActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if(jCheckBox2.isSelected()==true){
            jSpinner3.setEnabled(true);
            jSpinner4.setEnabled(true);
        }
        else {
            jSpinner3.setEnabled(false);
            jSpinner4.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    private void ListarPersonal(String Busqueda){
        LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
        List<Personal> listapersonalxx = new ArrayList<Personal>();
        listapersonalxx=lh.ListaPersonalMiBotica(Busqueda);
        DefaultTableModel modelo;
        String titulos[]=new String[3];
        titulos[0]="DNI";
        titulos[1]="Nombres";
        titulos[2]="Apellidos";
        Object valores[][]=new Object[0][titulos.length];
        modelo=new DefaultTableModel(valores,titulos){
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        for (int i = 0; i < listapersonalxx.size(); i++) {
            String nuevafila[]=new String[3];
                 nuevafila[0]=""+listapersonalxx.get(i).getDNI();
                 nuevafila[1]=""+listapersonalxx.get(i).getNombre();
                 nuevafila[2]=""+listapersonalxx.get(i).getApellido();
            modelo.addRow(nuevafila);
        }
        jTable1.setModel(modelo);

    }
    private boolean ValidarHoras1(){
        Date a=(Date)jSpinner1.getModel().getValue();
        Date b=(Date)jSpinner2.getModel().getValue();
        if(a.getHours()>b.getHours())
            return false;
        else if(a.getHours()== b.getHours()){
            if(a.getMinutes()>b.getMinutes())
                return false;
            else if(a.getMinutes()==b.getMinutes()){
                if(a.getSeconds()>=b.getSeconds())
                    return false;
            }
        }
        return true;
    }
    private boolean ValidarHoras2(){
        Date a=(Date)jSpinner3.getModel().getValue();
        Date b=(Date)jSpinner4.getModel().getValue();
        if(jCheckBox2.isSelected()==false)
            return true;
        if(a.getHours()>b.getHours())
            return false;
        else if(a.getHours()== b.getHours()){
            if(a.getMinutes()>b.getMinutes())
                return false;
            else if(a.getMinutes()==b.getMinutes()){
                if(a.getSeconds()>=b.getSeconds())
                    return false;
            }
        }
        return true;
    }
    public boolean ValidarTurnos(){
        Date a=(Date)jSpinner2.getModel().getValue();
        Date b=(Date)jSpinner3.getModel().getValue();
        if(jCheckBox2.isSelected()==false)
            return true;
        if(a.getHours()>b.getHours())
            return false;
        else if(a.getHours()== b.getHours()){
            if(a.getMinutes()>b.getMinutes())
                return false;
            else if(a.getMinutes()==b.getMinutes()){
                if(a.getSeconds()>b.getSeconds())
                    return false;
            }
        }
        return true;
    }
    private void JspinnerCero(){
        Date fecha = null;
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("HH:mm:ss");

        String strFecha = "00:00:00";
        try {
            fecha = formatoDelTexto.parse(strFecha);
        } catch (Exception ex) {}
        jSpinner1.getModel().setValue(fecha);
        jSpinner2.getModel().setValue(fecha);
        jSpinner3.getModel().setValue(fecha);
        jSpinner4.getModel().setValue(fecha);
    }
    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                JdAgregarHorario dialog = new JdAgregarHorario(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtextbuscar;
    // End of variables declaration//GEN-END:variables

}
