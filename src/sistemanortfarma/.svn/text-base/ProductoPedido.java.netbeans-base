/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemanortfarma;

/**
 *
 * @author Miguel Gomez S.
 */
import entidad.ProductosPrecios;
import javax.swing.JPanel;
import javax.swing.JDialog;
import java.awt.Dimension;
import javax.swing.WindowConstants;
import java.awt.Rectangle;
import javax.swing.BorderFactory;
import javax.swing.border.EtchedBorder;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.awt.Point;
import javax.swing.JLabel;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

import javax.swing.JTextField;

public class ProductoPedido extends JDialog {

    private static final long serialVersionUID = 1L;
    private JPanel jContentPane = null;
    private JPanel jPanel = null;
    private JButton BAnular = null;
    private JButton BCancelar = null;
    private JLabel LblClave = null;
    private JLabel LblInforma = null;
    private JLabel Lbl2 = null;
    private JTextField TxtArticulo = null;
    private JTextField TxtCantidad = null;

    //private JLabel LblMensaje = null;
    private JTextField TxtMensaje = null;
    private JTextField TxtPrecio = null;
    static String articulo = new String();  //  @jve:decl-index=0:   
    static String cantidad = new String();  //  @jve:decl-index=0:
    static boolean ingresadet = false;
    ProductosPrecios producPrecio;
    Mant_Productos mantProduc = new Mant_Productos();

    /**
     * @param owner
     */
    public ProductoPedido(ProductosPrecios precios) {
        super();
        producPrecio = precios;
        initialize();
        TxtPrecio.setEditable(false);
    }

    public static boolean isIngresadet() {
        return ingresadet;
    }

    public static void setIngresadet(boolean ingresadet) {
        ProductoPedido.ingresadet = ingresadet;
    }

    public static String getCantidad() {
        return cantidad;
    }

    public static void setCantidad(String cantidad) {
        ProductoPedido.cantidad = cantidad;
    }

    /**
     * This method initializes this
     *
     * @return void
     */
    private void initialize() {
        this.setSize(561, 178);
        this.setResizable(false);
        this.setModal(true);
        this.setTitle("Línea de Venta");
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setContentPane(getJContentPane());        
        this.setLocationRelativeTo(null);
        setIngresadet(false);
        setCantidad("");
        cargar();
        TxtCantidad.requestFocus();
    }

    /**
     * This method initializes jContentPane
     *
     * @return javax.swing.JPanel
     */
    private JPanel getJContentPane() {
        if (jContentPane == null) {
            LblClave = new JLabel();
            LblClave.setText("PRECIO DE VENTA:");
            LblClave.setSize(new Dimension(109, 23));
            LblClave.setLocation(new Point(313, 43));
            jContentPane = new JPanel();
            jContentPane.setLayout(null);
            jContentPane.add(getJPanel(), null);
            jContentPane.add(getBAnular(), null);
            jContentPane.add(getBCancelar(), null);
            jContentPane.add(getMensaje(), null);
        }
        return jContentPane;
    }

    
    /**
     * This method initializes jPanel
     *
     * @return javax.swing.JPanel
     */
    private JPanel getJPanel() {
        if (jPanel == null) {
            Lbl2 = new JLabel();
            Lbl2.setText("CANTIDAD:");
            Lbl2.setLocation(new Point(15, 43));
            Lbl2.setSize(new Dimension(69, 23));
            LblInforma = new JLabel();
            LblInforma.setHorizontalAlignment(SwingConstants.LEFT);
            LblInforma.setAutoscrolls(false);
            LblInforma.setHorizontalTextPosition(SwingConstants.LEFT);
            LblInforma.setLocation(new Point(15, 11));
            LblInforma.setSize(new Dimension(69, 23));
            LblInforma.setText("ARTICULO:");

            /*LblMensaje = new JLabel();
            LblMensaje.setHorizontalAlignment(SwingConstants.LEFT);
            LblMensaje.setAutoscrolls(false);
            LblMensaje.setHorizontalTextPosition(SwingConstants.LEFT);
            LblMensaje.setLocation(new Point(15, 65));
            LblMensaje.setSize(new Dimension(69, 23));
            LblMensaje.setText("MENSAJE:");*/


            jPanel = new JPanel();
            jPanel.setLayout(null);
            jPanel.setBounds(new Rectangle(12, 10, 533, 76));
            jPanel.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED));
            jPanel.add(LblInforma, null);
            jPanel.add(Lbl2, null);
            //jPanel.add(LblMensaje, null);
            jPanel.add(getTxtArticulo(), null);
            jPanel.add(LblClave, null);
            jPanel.add(getTxtPrecio(), null);
            jPanel.add(getTxtCantidad(), null);
        }
        return jPanel;
    }

    private JTextField getMensaje() {
        if (TxtMensaje == null) {
            TxtMensaje = new JTextField();
            TxtMensaje.setLocation(new Point(10, 97));
            //TxtMensaje.setDisabledTextColor(Color.darkGray);
            TxtMensaje.setDisabledTextColor(Color.RED);
            TxtMensaje.setEnabled(false);
            TxtMensaje.setFont(new Font("Arial Narrow", Font.BOLD, 16));
            TxtMensaje.setBackground(new Color(243, 243, 243));
            TxtMensaje.setForeground(new Color(255, 0, 0));
            TxtMensaje.setSize(new Dimension(280, 23));
            TxtMensaje.setBorder(null);
            TxtMensaje.addKeyListener(new KeyAdapter() {

                public void keyPressed(KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }

                }
            });
        }
        return TxtMensaje;
    }
    /**
     * This method initializes BAnular
     *
     * @return javax.swing.JButton
     */
    private JButton getBAnular() {
        if (BAnular == null) {
            BAnular = new JButton();
            BAnular.setText("Aceptar");
            BAnular.setToolTipText("Aceptar datos de línea de venta");
            BAnular.setHorizontalTextPosition(SwingConstants.RIGHT);
            BAnular.setHorizontalAlignment(SwingConstants.LEFT);
            BAnular.setLocation(new Point(302, 97));
            BAnular.setSize(new Dimension(116, 41));
            BAnular.setFont(new Font("Dialog", Font.PLAIN, 12));
            BAnular.setIcon(new ImageIcon("IMAGENES/MODIFICAR.JPG"));
            BAnular.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent evt) {
                    Cantidad();
                }
            });
            BAnular.addKeyListener(new KeyAdapter() {

                public void keyPressed(KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }
                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                        Cantidad();
                    }

                }
            });
            BAnular.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent e) {
                    Cantidad();
                }

                private void getBAnularKeyPressed(java.awt.event.KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }
                }
            });
        }
        return BAnular;
    }

    /**
     * This method initializes BCancelar
     *
     * @return javax.swing.JButton
     */
    private JButton getBCancelar() {
        if (BCancelar == null) {
            BCancelar = new JButton();
            BCancelar.setToolTipText("Cancelar datos y salir");
            BCancelar.setIcon(new ImageIcon("IMAGENES/CANCELAR2.JPG"));
            BCancelar.setHorizontalTextPosition(SwingConstants.RIGHT);
            BCancelar.setHorizontalAlignment(SwingConstants.LEFT);
            BCancelar.setFont(new Font("Dialog", Font.PLAIN, 12));
            BCancelar.setLocation(new Point(429, 97));
            BCancelar.setSize(new Dimension(116, 41));
            BCancelar.setText("Cancelar");
            BCancelar.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent evt) {
                    ingresadet = false;
                    dispose();
                }
            });

            BCancelar.addKeyListener(new KeyAdapter() {

                public void keyPressed(KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }
                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                        ingresadet = false;
                        dispose();
                    }

                }
            });
            BCancelar.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent e) {
                    ingresadet = false;
                    dispose();
                }
            });
        }
        return BCancelar;
    }

    /**
     * This method initializes TxtArticulo
     *
     * @return javax.swing.JTextField
     */
    private JTextField getTxtArticulo() {
        if (TxtArticulo == null) {
            TxtArticulo = new JTextField();
            TxtArticulo.setLocation(new Point(94, 11));
            TxtArticulo.setDisabledTextColor(Color.darkGray);
            TxtArticulo.setEnabled(false);
            TxtArticulo.setFont(new Font("Arial Narrow", Font.BOLD, 16));
            TxtArticulo.setBackground(new Color(243, 243, 243));
            TxtArticulo.setSize(new Dimension(423, 23));
            TxtArticulo.addKeyListener(new KeyAdapter() {

                public void keyPressed(KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }

                }
            });
        }
        return TxtArticulo;
    }

    /**
     * This method initializes TxtCantidad
     *
     * @return javax.swing.JTextField
     */
    private JTextField getTxtCantidad() {
        if (TxtCantidad == null) {
            TxtCantidad = new JTextField();
            TxtCantidad.setSize(new Dimension(71, 23));
            TxtCantidad.setText("1");
            TxtCantidad.setHorizontalAlignment(JTextField.RIGHT);
            TxtCantidad.setFont(new Font("Dialog", Font.BOLD, 14));
            TxtCantidad.setLocation(new Point(94, 43));
            TxtCantidad.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent evt) {
                    Cantidad();
                }
            });

            TxtCantidad.addKeyListener(new KeyAdapter() {

                public void keyPressed(KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }

                }
            });

            TxtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {

                public void keyTyped(java.awt.event.KeyEvent e) {
                    char caracter;
                    caracter = (e.getKeyChar() + "").charAt(0);
                    if (Character.isLetter(caracter)) {
                        caracter = Character.toUpperCase(caracter);
                    }
                    if ((caracter + "").matches("[0-9]")) {
                        e.setKeyChar(caracter);
                    } else {
                        if (caracter == 'F') {
                            e.setKeyChar(caracter);
                        } else {
                            e.consume();
                        }
                    }
                }
            });
        }
        return TxtCantidad;
    }

    /**
     * This method initializes TxtPrecio
     *
     * @return javax.swing.JTextField
     */
    private JTextField getTxtPrecio() {
        if (TxtPrecio == null) {
            TxtPrecio = new JTextField();
            TxtPrecio.setSize(new Dimension(88, 23));
            TxtPrecio.setText("0.00");
            TxtPrecio.setHorizontalAlignment(JTextField.RIGHT);
            TxtPrecio.setFont(new Font("Dialog", Font.BOLD, 14));
            TxtPrecio.setLocation(new Point(430, 43));
            TxtPrecio.addKeyListener(new KeyAdapter() {

                public void keyPressed(KeyEvent evt) {
                    if (evt.getKeyCode() == 27) {
                        dispose();
                    }
                }
            });
        }
        return TxtPrecio;
    }

    private void cargar() {
        String ProductoCod=producPrecio.getProductoBotica().getProducto().getIdProducto();
        String recupera = mantProduc.Recupera_MensajeProducto(ProductoCod).toString().trim();
        if (recupera == null || recupera.equals("")){
            recupera = "";
        }
        TxtArticulo.setText(producPrecio.getProductoBotica().getProducto().getDescripcion() + " - " + producPrecio.getProductoBotica().getProducto().getLaboratorio().getId_Lab());
        TxtPrecio.setText(String.valueOf(producPrecio.getPVPX()));
        TxtCantidad.setText(String.valueOf(""));
        TxtMensaje.setText(recupera);
    }

    private void Cantidad() {
        if (TxtCantidad.getText().trim().compareTo("") != 0) {
            cantidad = TxtCantidad.getText().trim();
            if (cantidad.compareTo("0") != 0) {
                ingresadet = true;
                setIngresadet(ingresadet);
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, " Porfavor Ingrese una Cantidad Correcta ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}  //  @jve:decl-index=0:visual-constraint="10,10"

