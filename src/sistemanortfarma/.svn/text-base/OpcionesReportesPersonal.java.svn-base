/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpcionesReportesPersonal.java
 *
 * Created on 02/08/2013, 10:39:43 AM
 */
package sistemanortfarma;

import CapaLogica.LogicaConexion;
import java.sql.Connection;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author Miguel Gomez S.
 */
public class OpcionesReportesPersonal extends javax.swing.JInternalFrame {

    public static Connection con = null;
    LogicaConexion logconex = new LogicaConexion();
    DefaultTreeModel modelo = null;
    AplicacionPersonal objpersonal;
    DefaultMutableTreeNode node;
    public static boolean entra = true;

    /** Creates new form OpcionesReportesPersonal */
    public OpcionesReportesPersonal(AplicacionPersonal obj) {
        initComponents();
        objpersonal = obj;
        if (con == null) {
            con = logconex.RetornaConexion();
        }
        setCon(con);
        CargarArbol();
        jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
    }

    public static Connection getCon() {
        return con;
    }

    public static void setCon(Connection con) {
        OpcionesReportesPersonal.con = con;
    }

    private void CargarArbol() {
        DefaultMutableTreeNode abuelo = new DefaultMutableTreeNode(" Reportes y Consultas ");
        DefaultMutableTreeNode padre = new DefaultMutableTreeNode("  Reportes De Horarios   ");
        modelo = new DefaultTreeModel(abuelo);

        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode("1 .  Horarios del Personal ");
        DefaultMutableTreeNode hijo1 = new DefaultMutableTreeNode("2 .  Apertura y Cierre de Botica");
        DefaultMutableTreeNode padre1 = new DefaultMutableTreeNode("3 . Salir  ");


        modelo.insertNodeInto(padre, abuelo, 0);
        modelo.insertNodeInto(hijo, padre, 0);
        modelo.insertNodeInto(hijo1, padre, 0);
        modelo.insertNodeInto(padre1, abuelo, 1);
        this.jTree1.setModel(modelo);

        TreePath treePath = new TreePath(padre.getPath());
        Expandir();
    }

    private void Expandir() {
        for (int x = 0; x < jTree1.getRowCount(); x++) {
            jTree1.expandRow(x);
        }
    }

    public void abrirVentanaInterna(JInternalFrame ventana) {
        this.jDesktopPane1.add(ventana);

        try {
            ventana.setLocation(ventana.getParent().getWidth() / 2 - ventana.getWidth() / 2, ventana.getParent().getHeight() / 2 - ventana.getHeight() / 2);
            ventana.requestFocus();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        ventana.setVisible(true);

    }

    private void VerificaEleccion() {
        try {

            switch (Integer.valueOf(node.toString().substring(0, 2).trim())) {

                case 1:
                    if (entra) {
                        entra = false;
                        ReporteHorariosPersonal objreporte = new ReporteHorariosPersonal(this);
                        abrirVentanaInterna(objreporte);
                    }
                    break;
                case 2:
                    if (entra) {
                        entra = false;
                        Reporte_AperturaCierre objreporte = new Reporte_AperturaCierre(this);
                        abrirVentanaInterna(objreporte);
                    }
                    break;

                case 3:
                    CerrarVentana();
                    break;
            }
        } catch (Exception ex) {
        }
    }

    private void CerrarVentana() {
        int confirmado = JOptionPane.showInternalConfirmDialog(this, "  DESEAS SALIR ? ", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.OK_OPTION == confirmado) {
            objpersonal.marcacdo = false;
            objpersonal.Habilita(true);
            dispose();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jDesktopPane1 = new javax.swing.JDesktopPane();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sistemanortfarma.SistemaNortfarmaApp.class).getContext().getResourceMap(OpcionesReportesPersonal.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTree1.setFont(resourceMap.getFont("jTree1.font")); // NOI18N
        jTree1.setName("jTree1"); // NOI18N
        jTree1.setPreferredSize(new java.awt.Dimension(240, 64));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        getContentPane().add(jScrollPane1);

        jDesktopPane1.setBackground(resourceMap.getColor("jDesktopPane1.background")); // NOI18N
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDesktopPane1.setName("jDesktopPane1"); // NOI18N
        jDesktopPane1.setOpaque(false);
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(200, 0));
        getContentPane().add(jDesktopPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        TreePath parentPath = jTree1.getSelectionPath();
        try {

            node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            Object nodeInfo = node.getUserObject();
            if (node.isLeaf()) {
                VerificaEleccion();
            } else {
                System.out.println(nodeInfo);
            }


        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
}//GEN-LAST:event_jTree1ValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
