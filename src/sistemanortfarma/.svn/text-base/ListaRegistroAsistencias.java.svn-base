/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ListaRegistroAsistencias.java
 *
 * Created on 15/04/2014, 10:04:28 AM
 */

package sistemanortfarma;

import CapaLogica.LogicaConexion;
import CapaLogica.LogicaHorariosTrabajadores;
import entidad.Horario_Marcacion;
import entidad.Horario_Trabajo;
import entidad.Horarios;
import entidad.Horarios_Detalle;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author kelvin
 */
public class ListaRegistroAsistencias extends javax.swing.JInternalFrame{

    AplicacionPersonal aplicacion;
    Calendar fechaHoy = Calendar.getInstance();
    JFrame frame;
    Map parameters = new HashMap();
    URL report_file;
    VerificaSistema obj;
    JasperReport masterReport = null;
    Connection con;
    JasperPrint jasperPrint;
    OpcionesReportes obreporte;
    LogicaConexion logconex = new LogicaConexion();

    /** Creates new form ListaRegistroAsistencias */
    public ListaRegistroAsistencias(AplicacionPersonal personal) {
        initComponents();
        aplicacion = personal;
        VerBotica();
        LimpiarTabla();
        con = logconex.RetornaConexion();
//        btnVerAsis.setVisible(false);
        Date date = new Date();
        dateHoy.setMaxSelectableDate(date);
        jButton1.setEnabled(false);

    }

    private ListaRegistroAsistencias() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBotica = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jmes = new com.toedter.calendar.JMonthChooser();
        janio = new com.toedter.calendar.JYearChooser();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jbNuevo = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator16 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        txtPT1 = new javax.swing.JTextField();
        txtPT2 = new javax.swing.JTextField();
        txtST1 = new javax.swing.JTextField();
        txtST2 = new javax.swing.JTextField();
        txtTardanza = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        jSeparator19 = new javax.swing.JSeparator();
        jSeparator20 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        chkTardanza = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObservacion = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        txtPT1R = new javax.swing.JFormattedTextField();
        txtPT2R = new javax.swing.JFormattedTextField();
        txtST1R = new javax.swing.JFormattedTextField();
        txtST2R = new javax.swing.JFormattedTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        chkFalta = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        txtCargo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTrabajador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        btnVerAsis = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dateHoy = new com.toedter.calendar.JDateChooser();
        txtHorarioAperturado = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoscrolls(true);
        setName("Form"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sistemanortfarma.SistemaNortfarmaApp.class).getContext().getResourceMap(ListaRegistroAsistencias.class);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtBotica.setBackground(resourceMap.getColor("txtBotica.background")); // NOI18N
        txtBotica.setFont(resourceMap.getFont("txtBotica.font")); // NOI18N
        txtBotica.setForeground(resourceMap.getColor("txtBotica.foreground")); // NOI18N
        txtBotica.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBotica.setText(resourceMap.getString("txtBotica.text")); // NOI18N
        txtBotica.setToolTipText(resourceMap.getString("txtBotica.toolTipText")); // NOI18N
        txtBotica.setName("txtBotica"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jmes.setName("jmes"); // NOI18N
        jmes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jmesMouseExited(evt);
            }
        });

        janio.setName("janio"); // NOI18N
        janio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                janioMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                janioMouseReleased(evt);
            }
        });

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBotica, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jmes, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(janio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addComponent(txtBotica, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jmes, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(janio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRABAJADOR", "DNI", "CARGO", "T1-INGRESO", "T1_SALIDA", "T2_INGRESO", "T2_SALIDA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setName("tabla"); // NOI18N
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        tabla.getColumnModel().getColumn(0).setMinWidth(200);
        tabla.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tabla.columnModel.title0")); // NOI18N
        tabla.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tabla.columnModel.title1")); // NOI18N
        tabla.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tabla.columnModel.title2")); // NOI18N
        tabla.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tabla.columnModel.title3")); // NOI18N
        tabla.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("tabla.columnModel.title4")); // NOI18N
        tabla.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("tabla.columnModel.title5")); // NOI18N
        tabla.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("tabla.columnModel.title6")); // NOI18N

        jbNuevo.setIcon(resourceMap.getIcon("jbNuevo.icon")); // NOI18N
        jbNuevo.setText(resourceMap.getString("jbNuevo.text")); // NOI18N
        jbNuevo.setEnabled(false);
        jbNuevo.setName("jbNuevo"); // NOI18N
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbModificar.setIcon(resourceMap.getIcon("jbModificar.icon")); // NOI18N
        jbModificar.setText(resourceMap.getString("jbModificar.text")); // NOI18N
        jbModificar.setEnabled(false);
        jbModificar.setName("jbModificar"); // NOI18N
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setIcon(resourceMap.getIcon("jbEliminar.icon")); // NOI18N
        jbEliminar.setText(resourceMap.getString("jbEliminar.text")); // NOI18N
        jbEliminar.setEnabled(false);
        jbEliminar.setName("jbEliminar"); // NOI18N
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, resourceMap.getColor("jPanel5.border.highlightOuterColor"), resourceMap.getColor("jPanel5.border.highlightInnerColor"), resourceMap.getColor("jPanel5.border.shadowOuterColor"), resourceMap.getColor("jPanel5.border.shadowInnerColor"))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator2.setName("jSeparator2"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator3.setName("jSeparator3"); // NOI18N

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator4.setName("jSeparator4"); // NOI18N

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator5.setName("jSeparator5"); // NOI18N

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator6.setName("jSeparator6"); // NOI18N

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator7.setName("jSeparator7"); // NOI18N

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jSeparator9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator9.setName("jSeparator9"); // NOI18N

        jSeparator10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator10.setName("jSeparator10"); // NOI18N

        jSeparator11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator11.setName("jSeparator11"); // NOI18N

        jSeparator14.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator14.setName("jSeparator14"); // NOI18N

        jSeparator16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator16.setName("jSeparator16"); // NOI18N

        jSeparator17.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator17.setName("jSeparator17"); // NOI18N

        txtPT1.setEditable(false);
        txtPT1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPT1.setText(resourceMap.getString("txtPT1.text")); // NOI18N
        txtPT1.setName("txtPT1"); // NOI18N

        txtPT2.setEditable(false);
        txtPT2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPT2.setText(resourceMap.getString("txtPT2.text")); // NOI18N
        txtPT2.setName("txtPT2"); // NOI18N

        txtST1.setEditable(false);
        txtST1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtST1.setText(resourceMap.getString("txtST1.text")); // NOI18N
        txtST1.setName("txtST1"); // NOI18N

        txtST2.setEditable(false);
        txtST2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtST2.setText(resourceMap.getString("txtST2.text")); // NOI18N
        txtST2.setName("txtST2"); // NOI18N

        txtTardanza.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTardanza.setText(resourceMap.getString("txtTardanza.text")); // NOI18N
        txtTardanza.setName("txtTardanza"); // NOI18N

        jSeparator8.setName("jSeparator8"); // NOI18N

        jSeparator12.setName("jSeparator12"); // NOI18N

        jSeparator13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator13.setName("jSeparator13"); // NOI18N

        jSeparator15.setName("jSeparator15"); // NOI18N

        jSeparator18.setName("jSeparator18"); // NOI18N

        jSeparator19.setName("jSeparator19"); // NOI18N

        jSeparator20.setName("jSeparator20"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        chkTardanza.setText(resourceMap.getString("chkTardanza.text")); // NOI18N
        chkTardanza.setEnabled(false);
        chkTardanza.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkTardanza.setName("chkTardanza"); // NOI18N
        chkTardanza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTardanzaActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        txtObservacion.setColumns(20);
        txtObservacion.setRows(5);
        txtObservacion.setName("txtObservacion"); // NOI18N
        jScrollPane3.setViewportView(txtObservacion);

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        try {
            txtPT1R.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPT1R.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPT1R.setText(resourceMap.getString("txtPT1R.text")); // NOI18N
        txtPT1R.setName("txtPT1R"); // NOI18N
        txtPT1R.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPT1RFocusLost(evt);
            }
        });
        txtPT1R.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPT1RKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPT1RKeyReleased(evt);
            }
        });

        try {
            txtPT2R.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPT2R.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPT2R.setName("txtPT2R"); // NOI18N
        txtPT2R.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPT2RFocusLost(evt);
            }
        });
        txtPT2R.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPT2RKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPT2RKeyReleased(evt);
            }
        });

        try {
            txtST1R.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtST1R.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtST1R.setName("txtST1R"); // NOI18N
        txtST1R.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtST1RFocusLost(evt);
            }
        });
        txtST1R.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtST1RKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtST1RKeyReleased(evt);
            }
        });

        try {
            txtST2R.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtST2R.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtST2R.setName("txtST2R"); // NOI18N
        txtST2R.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtST2RFocusLost(evt);
            }
        });
        txtST2R.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtST2RKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtST2RKeyReleased(evt);
            }
        });

        jCheckBox1.setFont(resourceMap.getFont("jCheckBox1.font")); // NOI18N
        jCheckBox1.setForeground(resourceMap.getColor("jCheckBox1.foreground")); // NOI18N
        jCheckBox1.setText(resourceMap.getString("jCheckBox1.text")); // NOI18N
        jCheckBox1.setEnabled(false);
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox1.setName("jCheckBox1"); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        chkFalta.setText(resourceMap.getString("chkFalta.text")); // NOI18N
        chkFalta.setEnabled(false);
        chkFalta.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkFalta.setName("chkFalta"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator16)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator17)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator13)
                                    .addComponent(jSeparator9)
                                    .addComponent(txtPT1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPT1R, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPT2R)
                            .addComponent(jSeparator15)
                            .addComponent(txtPT2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtST1R)
                            .addComponent(jSeparator18, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtST1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jSeparator11)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator19)
                                .addComponent(jSeparator8)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                .addComponent(txtST2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtST2R, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTardanza, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(jButton1, 0, 0, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator20)
                                .addComponent(jSeparator12)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkFalta, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator14)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                            .addComponent(chkTardanza, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPT2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPT2R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtPT1R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jCheckBox1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)
                            .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtST2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator19, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(chkTardanza)
                            .addGap(12, 12, 12)
                            .addComponent(chkFalta))
                        .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addGap(83, 83, 83)
                            .addComponent(txtST2R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTardanza, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtST1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtST1R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(resourceMap.getColor("jPanel6.border.highlightColor"), resourceMap.getColor("jPanel6.border.shadowColor"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        txtCargo.setEditable(false);
        txtCargo.setFont(resourceMap.getFont("txtCargo.font")); // NOI18N
        txtCargo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCargo.setText(resourceMap.getString("txtCargo.text")); // NOI18N
        txtCargo.setName("txtCargo"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        txtDNI.setEditable(false);
        txtDNI.setFont(resourceMap.getFont("txtCargo.font")); // NOI18N
        txtDNI.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDNI.setText(resourceMap.getString("txtDNI.text")); // NOI18N
        txtDNI.setName("txtDNI"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        txtTrabajador.setEditable(false);
        txtTrabajador.setFont(resourceMap.getFont("txtCargo.font")); // NOI18N
        txtTrabajador.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTrabajador.setText(resourceMap.getString("txtTrabajador.text")); // NOI18N
        txtTrabajador.setName("txtTrabajador"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTrabajador, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTrabajador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCargo, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDNI, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(resourceMap.getIcon("jButton4.icon")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel17.setFont(resourceMap.getFont("jLabel17.font")); // NOI18N
        jLabel17.setForeground(resourceMap.getColor("jLabel17.foreground")); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(resourceMap.getIcon("jLabel19.icon")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, resourceMap.getColor("jLabel19.border.highlightOuterColor"), resourceMap.getColor("jLabel19.border.highlightInnerColor"), resourceMap.getColor("jLabel19.border.shadowOuterColor"), resourceMap.getColor("jLabel19.border.shadowInnerColor"))); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)))
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, 0, 186, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton3.setBackground(resourceMap.getColor("jButton3.background")); // NOI18N
        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setToolTipText(resourceMap.getString("jButton3.toolTipText")); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jToggleButton1.setIcon(resourceMap.getIcon("jToggleButton1.icon")); // NOI18N
        jToggleButton1.setText(resourceMap.getString("jToggleButton1.text")); // NOI18N
        jToggleButton1.setBorder(null);
        jToggleButton1.setName("jToggleButton1"); // NOI18N
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        btnVerAsis.setIcon(resourceMap.getIcon("btnVerRepoAsis.icon")); // NOI18N
        btnVerAsis.setText(resourceMap.getString("btnVerRepoAsis.text")); // NOI18N
        btnVerAsis.setName("btnVerRepoAsis"); // NOI18N
        btnVerAsis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerAsisActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, resourceMap.getColor("jPanel7.border.highlightOuterColor"), resourceMap.getColor("jPanel7.border.highlightInnerColor"), resourceMap.getColor("jPanel7.border.shadowOuterColor"), resourceMap.getColor("jPanel7.border.shadowInnerColor"))); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        dateHoy.setDateFormatString(resourceMap.getString("dateHoy.dateFormatString")); // NOI18N
        dateHoy.setFont(resourceMap.getFont("dateHoy.font")); // NOI18N
        dateHoy.setName("dateHoy"); // NOI18N

        txtHorarioAperturado.setBackground(resourceMap.getColor("txtHorarioAperturado.background")); // NOI18N
        txtHorarioAperturado.setEditable(false);
        txtHorarioAperturado.setFont(resourceMap.getFont("txtHorarioAperturado.font")); // NOI18N
        txtHorarioAperturado.setForeground(resourceMap.getColor("txtHorarioAperturado.foreground")); // NOI18N
        txtHorarioAperturado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHorarioAperturado.setText(resourceMap.getString("txtHorarioAperturado.text")); // NOI18N
        txtHorarioAperturado.setName("txtHorarioAperturado"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateHoy, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(txtHorarioAperturado, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(txtHorarioAperturado, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, 0, 0, Short.MAX_VALUE)
                    .addComponent(dateHoy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButton6.setIcon(resourceMap.getIcon("jButton6.icon")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVerAsis, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVerAsis)
                    .addComponent(jButton6))
                .addGap(1, 1, 1)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        jCheckBox1.setSelected(false);
        chkTardanza.setSelected(false);
        chkTardanza.setEnabled(false);
        txtTardanza.setText("");
        txtObservacion.setText("");
        jButton1.setEnabled(true);
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        int aperturado = logicaHorario.VerDatosHorario(mes,anio).getAperturado();
        int fila = this.tabla.getSelectedRow();
        if (fila >= 0) {
            txtPT1.setText(listaHorario.get(fila).getT1_H_Entrada());
            txtPT2.setText(listaHorario.get(fila).getT1_H_Salida());
            txtST1.setText(listaHorario.get(fila).getT2_H_Entrada());
            txtST2.setText(listaHorario.get(fila).getT2_H_Salida());
            txtTrabajador.setText(listaHorario.get(fila).getHorario_Detalle().getPersonal().getApellido()+" "+listaHorario.get(fila).getHorario_Detalle().getPersonal().getNombre());
            txtDNI.setText(listaHorario.get(fila).getHorario_Detalle().getPersonal().getDNI());
            txtCargo.setText(listaHorario.get(fila).getHorario_Detalle().getRol().getDescripcion());
            txtPT1R.setText(listaHorario.get(fila).getT1_H_Entrada());
            txtPT2R.setText(listaHorario.get(fila).getT1_H_Salida());
            txtST1R.setText(listaHorario.get(fila).getT2_H_Entrada());
            txtST2R.setText(listaHorario.get(fila).getT2_H_Salida());
            jCheckBox1.setEnabled(true);
        }
        
        if(aperturado == 1) {
           validaUnHorario();
           jCheckBox1.setEnabled(true);
        }else{
           jCheckBox1.setEnabled(false);
        }
        validaUnHorario();
    }//GEN-LAST:event_tablaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        verTardanza();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int p = JOptionPane.showConfirmDialog(null, " Desea Salir ", "Confirmar",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (p == JOptionPane.YES_OPTION) {
            AplicacionPersonal.marcacdo = false;
            aplicacion.Habilita(true);
            dispose();
        }
}//GEN-LAST:event_jButton3ActionPerformed

    private void chkTardanzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTardanzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTardanzaActionPerformed

    private void jmesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmesMouseExited

    }//GEN-LAST:event_jmesMouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String fecha1 = txtPT1.getText();
        String fecha2 = txtPT1R.getText();
        String fecha3 = txtPT2.getText();
        String fecha4 = txtPT2R.getText();
        String fecha5 = txtST1.getText();
        String fecha6 = txtST1R.getText();
        String fecha7 = txtST2.getText();
        String fecha8 = txtST2R.getText();

        if(fecha2.equals("  :  :  ") || fecha6.equals("  :  :  ") || fecha4.equals("  :  :  ") || fecha8.equals("  :  :  ")
               || fecha1.equals("") || fecha3.equals("") || fecha5.equals("") || fecha7.equals("")) {
                JOptionPane.showMessageDialog(null, "NO HA INGRESADO TODOS LOS HORARIOS", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else {
            
            String[] horaIngreso = fecha2.split(":");
            Integer hora = Integer.parseInt(horaIngreso[0]);
            Integer minuto = Integer.parseInt(horaIngreso[1]);

            String[] horaSalida = fecha4.split(":");
            Integer hora1 = Integer.parseInt(horaSalida[0]);
            Integer minuto1 = Integer.parseInt(horaSalida[1]);

            String[] horaIngreso1 = fecha6.split(":");
            Integer hora2 = Integer.parseInt(horaIngreso1[0]);
            Integer minuto2 = Integer.parseInt(horaIngreso1[1]);

            String[] horaSalida1 = fecha8.split(":");
            Integer hora3 = Integer.parseInt(horaSalida1[0]);
            Integer minuto3 = Integer.parseInt(horaSalida1[1]);

            if(jCheckBox1.isSelected()) {
                guardarHorario();
            }else{
                if(hora > hora1) {
                    JOptionPane.showMessageDialog(null, "TURNO 1:\n\nHORA DE INGRESO NO PUEDE SER MAYOR QUE LA HORA DE SALIDA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if(hora2 > hora3) {
                    JOptionPane.showMessageDialog(null, "TURNO 2:\n\nHORA DE INGRESO NO PUEDE SER MAYOR QUE LA HORA DE SALIDA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if(hora == hora1 && minuto > minuto1) {
                    JOptionPane.showMessageDialog(null, "TURNO 1:\n\nHORA DE INGRESO NO PUEDE SER MAYOR QUE LA HORA DE SALIDA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if(hora2 == hora3 && minuto2 > minuto3) {
                    JOptionPane.showMessageDialog(null, "TURNO 2:\n\nHORA DE INGRESO NO PUEDE SER MAYOR QUE LA HORA DE SALIDA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if (((!fecha2.equals("00:00:00") && !fecha4.equals("00:00:00")) && (!fecha6.equals("00:00:00") && !fecha8.equals("00:00:00"))) && ((hora1 > hora2) || (hora1 == hora2  && minuto1 > minuto2)) ) {
                        JOptionPane.showMessageDialog(null, "LA HORA DE INGRESO DEL SEGUNDO TURNO NO PUEDE SER MENOR\nQUE LA HORA DE SALIDA DEL PRIMER TURNO", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                        System.out.println("aqui");
                }else if(hora < hora1 || hora2 < hora3) {
                    int diferencia = diferenciasDeFechas(fecha1,fecha2,fecha3,fecha4,fecha5,fecha6,fecha7,fecha8);
                    int mes = jmes.getMonth();
                    int anio = janio.getYear();
                    int aperturado = logicaHorario.VerDatosHorario(mes,anio).getAperturado();

                    if(tabla.getRowCount()>0) {
                        if(tabla.getSelectedRow() < 0) {
                            JOptionPane.showMessageDialog(null, "NO HA SELECCIONADO A NINGUN TRABAJADOR\nPARA AGREGAR HORARIO.", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                        }else {
                            if(txtTardanza.getText().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "El trabajador tiene una tardanza de: "+diferencia+" minutos", "NORTFARMA", JOptionPane.INFORMATION_MESSAGE);
                                guardarHorario();
                            }else{
                                guardarHorario();
                            }
                        }
                    }else {
                        if(aperturado == 1) {
                            JOptionPane.showMessageDialog(null, "EL HORARIO PARA LA FECHA SELECCIONADA\n NO HA SIDO APERTURADO.", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                        }else if(aperturado == 0) {
                            JOptionPane.showMessageDialog(null, "NO HAY DATOS PARA GUARDAR.", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                }else if((!fecha1.equals("00:00:00") && !fecha3.equals("00:00:00")) && hora > hora1) {
                    JOptionPane.showMessageDialog(null, "LA HORA DE SALIDA NO PUEDE SER MENOR\nQUE LA HORA DE ENTRADA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if ((!fecha5.equals("00:00:00") && !fecha7.equals("00:00:00")) && hora2 > hora3) {
                    JOptionPane.showMessageDialog(null, "LA HORA DE SALIDA NO PUEDE SER MENOR\nQUE LA HORA DE ENTRADA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if((!fecha1.equals("00:00:00") || !fecha3.equals("00:00:00")) && (hora == hora1 && minuto >= minuto1)) {
                    JOptionPane.showMessageDialog(null, "LA HORA DE SALIDA NO PUEDE SER IGUAL\nA LA HORA DE ENTRADA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }else if((!fecha5.equals("00:00:00") || !fecha7.equals("00:00:00")) && (hora2 == hora3 && minuto2 >= minuto3)) {
                    JOptionPane.showMessageDialog(null, "LA HORA DE SALIDA NO PUEDE SER IGUAL\nA LA HORA DE ENTRADA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }
//                else if((!fecha4.equals("00:00:00") || !fecha6.equals("00:00:00")) && hora1 > hora2) {
//                    if((fecha7.equals("00:00:00") && fecha8.equals("00:00:00"))) {
//                        guardarHorario();
//                    }else{
//                        System.out.println("Hora 1: "+hora1+"Hora 2: "+hora2);
//                        JOptionPane.showMessageDialog(null, "LA HORA DE INGRESO DEL SEGUNDO TURNO NO PUEDE SER MENOR\nQUE LA HORA DE SALIDA DEL PRIMER TURNO", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
//                    }
//                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jmesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmesMouseClicked

    }//GEN-LAST:event_jmesMouseClicked

    private void janioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_janioMouseClicked

    }//GEN-LAST:event_janioMouseClicked

    private void janioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_janioMouseReleased
       
    }//GEN-LAST:event_janioMouseReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jCheckBox1.setEnabled(false);
        txtTardanza.setText("");
        txtObservacion.setText("");
        dateHoy.setDate(null);
        jButton1.setEnabled(false);
        LimpiaCampos();
        String bot = txtBotica.getText().trim();
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        ValidarApertura();
        ListaHorariosDefinidos(bot,mes,anio);
        chkTardanza.setEnabled(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(tabla.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "NO HAY HORARIOS PARA LA FECHA SELECCIONADA\nVERIFIQUE LOS PARAMETROS", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else{
            if(tabla.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(null, "SELECCIONE UN TRABAJADOR \n PARA VER SU RECORD DE ASISTENCIAS", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
            }else{
                int row = tabla.convertRowIndexToModel(tabla.getSelectedRow());
                int esteMes = jmes.getMonth();
                int esteAnio = janio.getYear();
                ModificarHorariosTrabajador formModifica = new ModificarHorariosTrabajador(true,listaHorario,row, esteMes, esteAnio, this);
                aplicacion.abrirVentanaInterna(formModifica);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        correrProceso2();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void btnVerAsisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerAsisActionPerformed
        verReporte();
    }//GEN-LAST:event_btnVerAsisActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        
        JOptionPane.showMessageDialog(null, "Recuerde,"
                + "Se agregara personal al ultimo horario aperturado");
        JdAgregarHorario formModifica = new JdAgregarHorario(frame, true);
                formModifica.show();
        LimpiaCampos();
        String bot = txtBotica.getText().trim();
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        ValidarApertura();
        ListaHorariosDefinidos(bot,mes,anio);
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        if(tabla.getSelectedRow() < 0) {
           JOptionPane.showMessageDialog(null, "SELECCIONE UN TRABAJADOR \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }
        else {
            String dni=tabla.getValueAt(tabla.getSelectedRow(),1).toString();
            String nombres=tabla.getValueAt(tabla.getSelectedRow(),0).toString();
            String Cargo=tabla.getValueAt(tabla.getSelectedRow(),2).toString();
            JDiagModHorario formModifica = new JDiagModHorario(frame, true,dni, nombres, Cargo);
            formModifica.show();
        }
        LimpiaCampos();
        String bot = txtBotica.getText().trim();
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        ValidarApertura();
        ListaHorariosDefinidos(bot,mes,anio);
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed

        if(tabla.getSelectedRow() < 0) {
           JOptionPane.showMessageDialog(null, "SELECCIONE UN TRABAJADOR \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
         }
        else {
           String dni=tabla.getValueAt(tabla.getSelectedRow(),1).toString();
           LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
           String val=JOptionPane.showInputDialog(null, "OBSERVACION");
           if(val!=null){
                lh.Elimina_Horario_Trabajo(dni,val );
                JOptionPane.showMessageDialog(null, "Se ha eliminado el usuario ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
            }
           }
        LimpiaCampos();
        String bot = txtBotica.getText().trim();
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        ValidarApertura();
        ListaHorariosDefinidos(bot,mes,anio);
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void txtPT1RKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPT1RKeyReleased
        
    }//GEN-LAST:event_txtPT1RKeyReleased

    private void txtPT1RKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPT1RKeyPressed
        if(evt.getKeyCode()==10){
            ingresoDatosNumericos(txtPT1R, evt, 8);
            String texto = txtPT1R.getText();
            if(txtPT1R.getText().length()==2){
                txtPT1R.setText(texto+":");
            }else if(txtPT1R.getText().length()==5) {
                txtPT1R.setText(texto+":");
            }else if(txtPT1R.getText().length()>=8) {
            }
                txtPT1R.setText(CompletarEspacios(txtPT1R.getText()));
                txtPT2R.requestFocus();
        }
    }//GEN-LAST:event_txtPT1RKeyPressed

    private void txtPT2RKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPT2RKeyReleased
        
    }//GEN-LAST:event_txtPT2RKeyReleased

    private void txtST1RKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtST1RKeyReleased
        
    }//GEN-LAST:event_txtST1RKeyReleased

    private void txtST2RKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtST2RKeyReleased
        
    }//GEN-LAST:event_txtST2RKeyReleased

    private void txtPT2RKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPT2RKeyPressed
        if(evt.getKeyCode()==10){
            ingresoDatosNumericos(txtPT2R, evt, 8);
            String texto = txtPT2R.getText();
            if(txtPT2R.getText().length()==2){
                txtPT2R.setText(texto+":");
            }else if(txtPT2R.getText().length()==5) {
                txtPT2R.setText(texto+":");
            }else if(txtPT2R.getText().length()>=8) {
            }
                txtPT2R.setText(CompletarEspacios(txtPT2R.getText()));
                txtST1R.requestFocus();
        }
    }//GEN-LAST:event_txtPT2RKeyPressed

    private void txtST1RKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtST1RKeyPressed
        if(evt.getKeyCode()==10){
            ingresoDatosNumericos(txtST1R, evt, 8);
            String texto = txtST1R.getText();
            if(txtST1R.getText().length()==2){
                txtST1R.setText(texto+":");
            }else if(txtST1R.getText().length()==5) {
                txtST1R.setText(texto+":");
            }else if(txtST1R.getText().length()>=8) {
            }
                txtST1R.setText(CompletarEspacios(txtST1R.getText()));
                txtST2R.requestFocus();
        }
    }//GEN-LAST:event_txtST1RKeyPressed

    private void txtST2RKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtST2RKeyPressed
        if(evt.getKeyCode()==10){
            ingresoDatosNumericos(txtST2R, evt, 8);
            String texto = txtST2R.getText();
            if(txtST2R.getText().length()==2){
                txtST2R.setText(texto+":");
            }else if(txtST2R.getText().length()==5) {
                txtST2R.setText(texto+":");
            }else if(txtST2R.getText().length()>=8) {
                txtST2R.setText(CompletarEspacios(txtST2R.getText()));

            }
        }
    }//GEN-LAST:event_txtST2RKeyPressed

    private void txtPT1RFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPT1RFocusLost
        txtPT1R.setText(CompletarEspacios(txtPT1R.getText()));
        verTardanza();
    }//GEN-LAST:event_txtPT1RFocusLost

    private void txtPT2RFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPT2RFocusLost
        txtPT2R.setText(CompletarEspacios(txtPT2R.getText()));
        verTardanza();
    }//GEN-LAST:event_txtPT2RFocusLost

    private void txtST1RFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtST1RFocusLost
        txtST1R.setText(CompletarEspacios(txtST1R.getText()));
        verTardanza();
    }//GEN-LAST:event_txtST1RFocusLost

    private void txtST2RFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtST2RFocusLost
        txtST2R.setText(CompletarEspacios(txtST2R.getText()));
        verTardanza();
    }//GEN-LAST:event_txtST2RFocusLost

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()) {
            txtPT1R.setEditable(false);
            txtPT2R.setEditable(false);
            txtST1R.setEditable(false);
            txtST2R.setEditable(false);
            jButton1.setEnabled(false);
            txtPT1R.setText("00:00:00");
            txtPT2R.setText("00:00:00");
            txtST1R.setText("00:00:00");
            txtST2R.setText("00:00:00");
            txtObservacion.setText("NO ASISTIO");
            txtTardanza.setText("0 Min");
            chkFalta.setEnabled(true);
            chkTardanza.setSelected(false);
            chkTardanza.setEnabled(false);
        }else if(!jCheckBox1.isSelected()) {
            txtPT1R.setEditable(true);
            chkFalta.setEnabled(false);
            chkFalta.setSelected(false);
            txtPT2R.setEditable(true);
            txtST1R.setEditable(true);
            txtST2R.setEditable(true);
            jButton1.setEnabled(true);
            txtObservacion.setText("");
            txtTardanza.setText("");
            int fila = this.tabla.getSelectedRow();
            if (fila >= 0) {
                txtPT1R.setText(listaHorario.get(fila).getT1_H_Entrada());
                txtPT2R.setText(listaHorario.get(fila).getT1_H_Salida());
                txtST1R.setText(listaHorario.get(fila).getT2_H_Entrada());
                txtST2R.setText(listaHorario.get(fila).getT2_H_Salida());
            }
            validaUnHorario();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        verReporteFaltas();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ListaRegistroAsistencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerAsis;
    private javax.swing.JCheckBox chkFalta;
    private javax.swing.JCheckBox chkTardanza;
    private com.toedter.calendar.JDateChooser dateHoy;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToggleButton jToggleButton1;
    private com.toedter.calendar.JYearChooser janio;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private com.toedter.calendar.JMonthChooser jmes;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtBotica;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtHorarioAperturado;
    private javax.swing.JTextArea txtObservacion;
    private javax.swing.JTextField txtPT1;
    private javax.swing.JFormattedTextField txtPT1R;
    private javax.swing.JTextField txtPT2;
    private javax.swing.JFormattedTextField txtPT2R;
    private javax.swing.JTextField txtST1;
    private javax.swing.JFormattedTextField txtST1R;
    private javax.swing.JTextField txtST2;
    private javax.swing.JFormattedTextField txtST2R;
    private javax.swing.JTextField txtTardanza;
    private javax.swing.JTextField txtTrabajador;
    // End of variables declaration//GEN-END:variables

    String[] columnas = {"TRABAJADOR", "DNI", "CARGO", "T1-INGRESO", "T1-SALIDA", "T2-INGRESO", "T2-SALIDA"};
    LogicaHorariosTrabajadores logicaHorario = new LogicaHorariosTrabajadores();
    List<Horario_Trabajo> listaHorario;
    List<Horario_Marcacion> listaMarcacion;
    Horarios_Detalle hdetalle;
    Horario_Trabajo hTrabajo;
    Horario_Marcacion hMarcacion;
    DefaultTableModel modelo = null;
    Horarios horarios;

    private void validaUnHorario() {
        int fila = this.tabla.getSelectedRow();
        if(listaHorario.get(fila).getT2_H_Entrada().equals("00:00:00") && listaHorario.get(fila).getT2_H_Salida().equals("00:00:00")) {
            txtST1R.setEditable(false);
            txtST2R.setEditable(false);
        }else {
            txtST1R.setEditable(true);
            txtST2R.setEditable(true);
        }

        if(listaHorario.get(fila).getT1_H_Entrada().equals("00:00:00") && listaHorario.get(fila).getT1_H_Salida().equals("00:00:00")) {
            txtPT1R.setEditable(false);
            txtPT2R.setEditable(false);
        }else {
            txtPT1R.setEditable(true);
            txtPT2R.setEditable(true);
        }
    }

    private boolean ListaHorariosDefinidos(String bot, int mes, int anio) {
        LimpiarTabla();
        listaHorario = logicaHorario.ListaHorariosTrabajo(bot, mes, anio);
        
        if(listaHorario.size() > 0) {
            for(Horario_Trabajo detalle : listaHorario) {;

                Object [][] datos = {{
                    detalle.getHorario_Detalle().getPersonal().getApellido() + " " + detalle.getHorario_Detalle().getPersonal().getNombre(),
                    detalle.getHorario_Detalle().getPersonal().getDNI(),
                    detalle.getHorario_Detalle().getRol().getDescripcion(),
                    detalle.getT1_H_Entrada(),
                    detalle.getT1_H_Salida(),
                    detalle.getT2_H_Entrada(),
                    detalle.getT2_H_Salida()
                }};

                if (modelo == null) {
                    modelo = new DefaultTableModel(datos, columnas) {

                        @Override
                        public boolean isCellEditable(int fila, int columna) {
                            if (columna == 11) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    };

                    tabla.setModel(modelo);
                } else {
                    modelo.addRow(datos[0]);
                }
            }

            return true;
        }else{
            return false;
        }
    }

    private void LimpiarTabla() {
        modelo=(DefaultTableModel)tabla.getModel();
        modelo.setRowCount(0);
    }

    public void ingresoDatosNumericos(JTextField caja, KeyEvent evt, int cantDig){
        Character caracter = new Character(evt.getKeyChar());
        if (!SoloNumeros(caracter, evt)) {
            String texto = "";
            for (int i = 0; i < caja.getText().length(); i++) {
                if (SoloNumeros(new Character(caja.getText().charAt(i)), evt)) {
                    texto += caja.getText().charAt(i);
                }
            }
            caja.setText(texto);
            caja.getToolkit().beep();
        }

        if (caja.getText().length() > cantDig) {

            String texto = "";
            texto = caja.getText().substring(0, cantDig);
            caja.setText(texto);
            caja.getToolkit().beep();
        }
    }

    private boolean SoloNumeros(Character caracter, KeyEvent evt ) {
        char c = caracter.charValue();
        if (!(Character.isDigit(c) //si es letra
                || c == ':' //o dos puntos
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_UP
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_DOWN
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_LEFT
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_RIGHT
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_FINAL
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_END
                || evt.getKeyCode() == 127
                || evt.getKeyCode() == 16
                || evt.getKeyCode() == java.awt.event.KeyEvent.VK_HOME
                )) {
            return false;
        } else {
            return true;
        }
    }

    private void ValidarApertura() {
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        int aperturado = logicaHorario.VerDatosHorario(mes,anio).getAperturado();
                    if(aperturado == 1) {
                        txtHorarioAperturado.setText("Horario Aperturado");
                        tabla.setEnabled(true);
                        jbNuevo.setEnabled(true);
                        jbModificar.setEnabled(true);
                        jbEliminar.setEnabled(true);
                    }else if(aperturado == 0) {
                        txtHorarioAperturado.setText("Horario Cerrado");
                        tabla.setEnabled(false);
                        jbNuevo.setEnabled(false);
                        jbModificar.setEnabled(false);
                        jbEliminar.setEnabled(false);
                    }
    }

    public synchronized int diferenciasDeFechas(String fechaInicial, String fechaFinal, String fechaInicial1, String fechaFinal1,
                                                String fechaInicial2, String fechaFinal2, String fechaInicial3, String fechaFinal3) {

        int tardanza;
        int dif1=0;
        int dif2=0;
        int dif3=0;
        int dif4=0;
        int dif5=0;
        int dif6=0;
        int dif7=0;
        int dif8=0;

        
            String[] horaReal = fechaInicial.split(":");
            Integer hora1 = Integer.parseInt(horaReal[0]);
            Integer minuto1 = Integer.parseInt(horaReal[1]);

            String[] horaProgramada = fechaFinal.split(":");
            Integer hora2 = Integer.parseInt(horaProgramada[0]);
            Integer minuto2 = Integer.parseInt(horaProgramada[1]);

            String[] horaReal1 = fechaInicial1.split(":");
            Integer hora3 = Integer.parseInt(horaReal1[0]);
            Integer minuto3 = Integer.parseInt(horaReal1[1]);

            String[] horaProgramada1 = fechaFinal1.split(":");
            Integer hora4 = Integer.parseInt(horaProgramada1[0]);
            Integer minuto4 = Integer.parseInt(horaProgramada1[1]);

            String[] horaReal2 = fechaInicial2.split(":");
            Integer hora5 = Integer.parseInt(horaReal2[0]);
            Integer minuto5 = Integer.parseInt(horaReal2[1]);

            String[] horaProgramada2 = fechaFinal2.split(":");
            Integer hora6 = Integer.parseInt(horaProgramada2[0]);
            Integer minuto6 = Integer.parseInt(horaProgramada2[1]);

            String[] horaReal3 = fechaInicial3.split(":");
            Integer hora7 = Integer.parseInt(horaReal3[0]);
            Integer minuto7 = Integer.parseInt(horaReal3[1]);

            String[] horaProgramada3 = fechaFinal3.split(":");
            Integer hora8 = Integer.parseInt(horaProgramada3[0]);
            Integer minuto8 = Integer.parseInt(horaProgramada3[1]);

            if(hora1 > hora2){
                dif2 = 0;
                dif1 = 0;

            }else {
                if(hora1 == hora2) {
                    dif1 = minuto2 - minuto1;
                }else{
                    dif2 = hora2 - hora1;
                    dif1 = minuto2 - minuto1;
                }
            }                

            if(hora3 > hora4){
                dif4 = 0;
                dif3 = 0;
            }else{
                if(hora3 == hora4) {
                    dif3 = minuto4 - minuto3;
                }else{
                    dif4 = hora4 - hora3;
                    dif3 = minuto4 - minuto3;
                }
            }

            if(hora6 >= hora5){
                dif6 = 0;
                dif5 = 0;

            }else {
                dif6 = hora5 - hora6;
                dif5 = minuto5 - minuto6;
            }

            if(hora8 >= hora7){
                dif8 = 0;
                dif7 = 0;
            }else{
                dif8 = hora7 - hora8;
                dif7 = minuto7 - minuto8;
            }
            

        tardanza = ((dif2*60)+dif1) + ((dif4*60)+dif3) + ((dif6*60)+dif5) + ((dif8*60)+dif7);
        return tardanza;

    }

    private boolean VerBotica() {
        txtBotica.setText(logicaHorario.VerBotica().getId_Botica());        
        return true;
    }

    private void LimpiaCampos() {
        txtTrabajador.setText("");
        txtDNI.setText("");
        txtCargo.setText("");
        txtPT1.setText("");
        txtPT1R.setText("");
        txtPT2.setText("");
        txtPT2R.setText("");
        txtST1.setText("");
        txtST1R.setText("");
        txtST2.setText("");
        txtST2R.setText("");
        txtTardanza.setText("");
        txtObservacion.setText("");
        chkTardanza.setSelected(false);
        chkTardanza.setEnabled(false);
        jCheckBox1.setEnabled(false);
        jCheckBox1.setSelected(false);
    }

    private void guardarHorario() {
        LogicaHorariosTrabajadores logicaHorarios = new LogicaHorariosTrabajadores();
        Horario_Marcacion miMarcacion;
        int fila = tabla.getSelectedRow();
        listaMarcacion = logicaHorarios.ListahorariosTrabajador(listaHorario.get(fila).getHorario_Detalle().getPersonal().getId_Personal());
        try {
            miMarcacion = new Horario_Marcacion();
            char just;
            char falt;
            if(chkTardanza.isSelected()) {
                just = 1;
            }else {
                just = 0;
            }
            if(chkFalta.isSelected()) {
                falt = 1;
            }else {
                falt = 0;
            }

            int p = JOptionPane.showConfirmDialog(null, " Seguro de Guardar este Horario ", "Confirmar",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (p == JOptionPane.YES_OPTION) {

                SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd");

                String fecha1 = txtPT1.getText();
                String fecha2 = txtPT1R.getText();
                String fecha3 = txtST1.getText();
                String fecha4 = txtST1R.getText();
                String fecha5 = txtPT2.getText();
                String fecha6 = txtPT2R.getText();
                String fecha7 = txtST2.getText();
                String fecha8 = txtST2R.getText();
                int diferencia = diferenciasDeFechas(fecha1,fecha2,fecha3,fecha4,fecha5,fecha6,fecha7,fecha8);

                if(diferencia >= 0) {
                    if(dateHoy.getDate()==null) {
                            JOptionPane.showMessageDialog(null, "SELECCIONE UNA FECHA PARA REGISTRAR LA ASISTENCIA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    }else {
                        int miMes = dateHoy.getCalendar().get(Calendar.MONTH);
                        int miAnio = dateHoy.getCalendar().get(Calendar.YEAR);

                        if(miMes != jmes.getMonth() || miAnio != janio.getYear()) {
                            JOptionPane.showMessageDialog(null, "VERIFIQUE LA FECHA,\nNO COINCIDE CON LA FECHA DEL HORARIO PLANIFICADO", "NORTFARMA ", JOptionPane.ERROR_MESSAGE);
                        }else{
                            miMarcacion.setId_Horario_Trabajo(listaHorario.get(tabla.getSelectedRow()).getId_Horario_Trabajo());
                            miMarcacion.setT1_H_Entrada(txtPT1R.getText());
                            miMarcacion.setT1_H_Salida(txtPT2R.getText());
                            miMarcacion.setT2_H_Entrada(txtST1R.getText());
                            miMarcacion.setT2_H_Salida(txtST2R.getText());
                            char falto = 0;
                            if(jCheckBox1.isSelected()) {
                                miMarcacion.setTardanza(String.valueOf(0));
                                falto = 1;
                            }else {
                                miMarcacion.setTardanza(String.valueOf(diferencia));
                                falto = 0;
                            }
                            miMarcacion.setJustificacion(just);
                            miMarcacion.setJustificacionFalta(falt);
                            miMarcacion.setFalta(falto);
                            miMarcacion.setObservacion(txtObservacion.getText());
                            miMarcacion.setFecha(sdf.format(dateHoy.getDate()));

                            for(fila = 0; fila < listaMarcacion.size(); fila++) {
                                String fechaAGuardar = sdf.format(dateHoy.getDate());
                                String fechaMarcacion = listaMarcacion.get(fila).getFecha();

                                if(fechaMarcacion.equals(fechaAGuardar)) {
                                    JOptionPane.showMessageDialog(null, "YA HAY UNA ASISTENCIA CON ESA FECHA REGISTRADA\nPARA EL TRABAJADOR SELECCIONADO", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                                    return;
                                }
                            }

                            if (logicaHorario.InsertaHorarioMarcacion(miMarcacion)) {
                                JOptionPane.showMessageDialog(this, "EL HORARIO DE : \n " + txtTrabajador.getText().trim() + "  A SIDO REGISTRADO", "NORTFARMA", JOptionPane.INFORMATION_MESSAGE);
                                LimpiaCampos();
                            } else {
                                JOptionPane.showMessageDialog(this, "ERROR AL INSERTAR HORARIO", "ERROR", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }else {
                    JOptionPane.showMessageDialog(null, "LA HORA DE INGRESO NO PUEDE SER MAYOR A LA HORA DE SALIDA\nVERIFICAR LAS HORAS DE LOS DOS TURNOS POR FAVOR", "NORTFARMA ", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ERROR AL INSERTAR HORARIO q_p", "ERROR", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex.getMessage());
        }
    }
    
    public void correrProceso2() {

        String sistema = "Windows";

        try {
            
            parameters.put("vAnio", janio.getYear());
            parameters.put("vBotica", txtBotica.getText());
            parameters.put("vMes", jmes.getMonth());
            
            if (obj.getsSistemaOperativo().indexOf(sistema) != -1) {
                parameters.put("SUBREPORT_DIR", "Reportes/");
            } else {
                parameters.put("SUBREPORT_DIR", "//Reportes//");
            }

            report_file = this.getClass().getResource("/Reportes/Horarios.jasper");
            
            masterReport = (JasperReport) JRLoader.loadObject(report_file);
            jasperPrint = JasperFillManager.fillReport(masterReport, parameters, con);
            JasperViewer view = new JasperViewer(jasperPrint, false);
            view.setTitle("REPORTE DE HORARIOS");
            view.setVisible(true);
            view.setSize(850, 850);

        } catch (JRException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al generar el reporte", "Error ", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void verAsistencias() {
        int idHorario = listaHorario.get(0).getHorario_Detalle().getHorario().getId_Horario();
        
        String sistema = "Windows";

        try {

            parameters.put("vHorario", idHorario);

            if (obj.getsSistemaOperativo().indexOf(sistema) != -1) {
                parameters.put("SUBREPORT_DIR", "Reportes/");
            } else {
                parameters.put("SUBREPORT_DIR", "//Reportes//");
            }

            report_file = this.getClass().getResource("/Reportes/HorariosMarcacion.jasper");

            masterReport = (JasperReport) JRLoader.loadObject(report_file);
            jasperPrint = JasperFillManager.fillReport(masterReport, parameters, con);
            JasperViewer view = new JasperViewer(jasperPrint, false);
            view.setTitle("REPORTE DE ASISTENCIAS");
            view.setVisible(true);
            view.setSize(850, 850);

        } catch (JRException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al generar el reporte", "Error ", JOptionPane.ERROR_MESSAGE);
        }
    }

    public String CompletarEspacios(String cadena){
        String car[]=cadena.split(":");
        if(car[0].trim().length()==1 )
            car[0]="0"+car[0].trim();
        else if(car[0].trim().length()==0)
            car[0]="00";
        else if(Integer.parseInt(car[0])>=24)
            car[0]="23";

        if(car[1].trim().length()==1 )
            car[1]="0"+car[1].trim();
        else if(car[1].trim().length()==0)
            car[1]="00";
        else if(Integer.parseInt(car[1])>=60)
            car[1]="59";

        if(car[2].trim().length()==1 )
            car[2]="0"+car[2].trim();
        else if(car[2].trim().length()==0)
            car[2]="00";
        else if(Integer.parseInt(car[2])>=60)
            car[2]="59";

        return car[0]+":"+car[1]+":"+car[2];
    }

    private ReporteAsistencias dRegistroAsistencia;
    private void verReporte() {
//        int idHorario = listaHorario.get(0).getHorario_Detalle().getHorario().getId_Horario();
        int idHorario = 0;
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        String botica = txtBotica.getText();
        System.out.println("id horario: "+idHorario);
        if(dRegistroAsistencia == null){
            dRegistroAsistencia = new ReporteAsistencias(frame, false,botica, mes, anio, idHorario);
            
        }dRegistroAsistencia.inicio();
    }

    private void validaFalto() {
            jCheckBox1.setSelected(true);
            jCheckBox1.setEnabled(true);
                chkFalta.setSelected(true);
                chkFalta.setEnabled(true);
                chkFalta.setSelected(false);
    }

    private void verTardanza() {
        if(tabla.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "SELECCIONE UN HORARIO.", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else {
            if(txtPT1R.getText().equals("  :  :  ") || txtPT2R.getText().equals("  :  :  ") || txtST1R.getText().equals("  :  :  ") || txtST2R.getText().equals("  :  :  ")
               || txtPT1.getText().equals("") || txtPT2.getText().equals("") || txtST1.getText().equals("") || txtST2.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "NO HA INGRESADO HORARIOS", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
            }else {
                String fecha1 = txtPT1.getText();
                String fecha2 = txtPT1R.getText();
                String fecha3 = txtST1.getText();
                String fecha4 = txtST1R.getText();
                String fecha5 = txtPT2.getText();
                String fecha6 = txtPT2R.getText();
                String fecha7 = txtST2.getText();
                String fecha8 = txtST2R.getText();
                int diferencia = diferenciasDeFechas(fecha1,fecha2,fecha3,fecha4,fecha5,fecha6,fecha7,fecha8);
                if(fecha4.equals("00:00:00") && fecha6.equals("00:00:00") && fecha2.equals("00:00:00") && fecha8.equals("00:00:00")) {
                    txtTardanza.setText("0 Min");
                }else {
                    txtTardanza.setText(String.valueOf(diferencia)+" Min");
                }
                if(diferencia <= 0) {
                    chkTardanza.setEnabled(false);
                }else if(diferencia > 0) {
                    chkTardanza.setEnabled(true);
                }
            }
        }
    }
    
    private ReporteFaltasTardanzas dRegistroFaltasTardanzas;
    private void verReporteFaltas() {
        int mes = jmes.getMonth();
        int anio = janio.getYear();
        String botica = txtBotica.getText();
        if(dRegistroFaltasTardanzas == null){
            dRegistroFaltasTardanzas = new ReporteFaltasTardanzas(frame, false,botica, mes, anio);

        }dRegistroFaltasTardanzas.inicio();
    }
    
}