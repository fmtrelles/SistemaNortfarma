/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InformeInv.java
 *
 * Created on 03-mar-2015, 17:16:47
 */

package sistemanortfarma;

import CapaLogica.LogicaConexion;
import CapaLogica.LogicaCruceInventarios;
import CapaLogica.MiDefaultTableModel;
import entidad.Venta;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.table.TableColumn;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author KELVIN
 */
public class InformeInv extends javax.swing.JInternalFrame {

    LogicaCruceInventarios logicaCruce = new LogicaCruceInventarios();
    List<Venta> listaVentas;
    List<Venta> listaVentasDet;
    List<Venta> listaInforme;
    private DefaultTableModel tablaVentas;
    private DefaultTableModel tablaVentasDet;
    private DefaultTableModel tablaInforme;
    Inventarios objInventarios;
    private String idbotica;
    JDesktopPane desktopPane;
    TableColumn columnaTablaVenta = null;
    TableColumn columnaTablaVentaDet = null;
    TableColumn columnaTablaInforme = null;
    Connection conex;
    Map parameters = new HashMap();
    URL report_file;
    VerificaSistema obj;
    JasperReport masterReport = null;
    Connection con;
    JasperPrint jasperPrint;
    OpcionesReportes obreporte;
    LogicaConexion logconex = new LogicaConexion();

    /** Creates new form InformeInv */
    public InformeInv() {
        initComponents();
    }

    InformeInv(java.awt.Frame parent, Inventarios obj, OpcionesMenu objmenu, JDesktopPane desktp) {
        initComponents();
        objInventarios = obj;
        desktopPane = desktp;
        con = logconex.RetornaConexion();
        conex = logconex.GetConnection();
        tablaVentas = (DefaultTableModel) tblVentas.getModel();
        tablaVentas = new MiModeloTabla();
        tablaVentasDet = (DefaultTableModel) tblVentasDet.getModel();
        tablaInforme = (DefaultTableModel) tblInforme.getModel();
        idbotica = Inventarios.getIdbotica();
        jLabel4.setText("BOTICA FELICIDAD "+idbotica);
        tablaVentasDet = new ModeloTabla();
        tablaInforme = new ModeloTabla();
        lbloculto.setVisible(false);
        LimpiatTablaVentas();
        LimpiatTablaVentasDet();
        LimpiatTablaInforme();
        construirVentas();
        construirVentasDet();
        construirVentasInf();
        obtenerProximoInforme();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date date = new Date();
        this.jLabel5.setText(sdf.format(date));
    }

    private void cerrarVentana() {
        int p = JOptionPane.showConfirmDialog(null, " Deseaa Salir ", "Confirmar",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (p == JOptionPane.YES_OPTION) {
            objInventarios.Habilita(true);
            objInventarios.marcacdo = false;
            this.dispose();
        }
    }

    public class ModeloTabla extends DefaultTableModel {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    }

    public class MiModeloTabla extends MiDefaultTableModel {

        @Override
        public boolean isCellEditable(int row, int column) {
            if (column == tablaVentas.getColumnCount() - 1) {
                return true;
            } else {
                return false;
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVentas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVentasDet = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblInforme = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dFechaIni = new com.toedter.calendar.JDateChooser();
        dFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lbloculto = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cboAlmacen = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cboDescuento = new javax.swing.JComboBox();
        chkResponsable = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sistemanortfarma.SistemaNortfarmaApp.class).getContext().getResourceMap(InformeInv.class);
        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel2.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel2.border.titleFont"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "INTERNO", "FECHA", "SERIE", "NUMERO", "S.TOTAL", "IGV", "TOTAL", "S"
            }
        ));
        tblVentas.setName("tblVentas"); // NOI18N
        tblVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVentasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVentas);
        tblVentas.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title0")); // NOI18N
        tblVentas.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title1")); // NOI18N
        tblVentas.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title2")); // NOI18N
        tblVentas.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title3")); // NOI18N
        tblVentas.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title4")); // NOI18N
        tblVentas.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title5")); // NOI18N
        tblVentas.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title6")); // NOI18N
        tblVentas.getColumnModel().getColumn(7).setHeaderValue(resourceMap.getString("tblVentas.columnModel.title7")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel3.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel3.border.titleFont"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tblVentasDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblVentasDet.setName("tblVentasDet"); // NOI18N
        jScrollPane2.setViewportView(tblVentasDet);
        tblVentasDet.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tblVentasDet.columnModel.title0")); // NOI18N
        tblVentasDet.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tblVentasDet.columnModel.title1")); // NOI18N
        tblVentasDet.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tblVentasDet.columnModel.title2")); // NOI18N
        tblVentasDet.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tblVentasDet.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(resourceMap.getColor("jPanel4.background")); // NOI18N
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel4.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel4.border.titleFont"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tblInforme.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblInforme.setName("tblInforme"); // NOI18N
        jScrollPane3.setViewportView(tblInforme);
        tblInforme.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tblInforme.columnModel.title0")); // NOI18N
        tblInforme.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tblInforme.columnModel.title1")); // NOI18N
        tblInforme.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tblInforme.columnModel.title2")); // NOI18N
        tblInforme.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tblInforme.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        jPanel5.setBackground(resourceMap.getColor("jPanel5.background")); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        dFechaIni.setName("dFechaIni"); // NOI18N

        dFechaFin.setName("dFechaFin"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        lblCodigo.setFont(resourceMap.getFont("lblCodigo.font")); // NOI18N
        lblCodigo.setText(resourceMap.getString("lblCodigo.text")); // NOI18N
        lblCodigo.setName("lblCodigo"); // NOI18N

        lbloculto.setText(resourceMap.getString("lbloculto.text")); // NOI18N
        lbloculto.setName("lbloculto"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dFechaFin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dFechaIni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbloculto)
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblCodigo)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addComponent(lbloculto))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(dFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(dFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );

        jPanel6.setBackground(resourceMap.getColor("jPanel6.background")); // NOI18N
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel6.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel6.border.titleFont"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        cboAlmacen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------------", "Farmacos", "Perfumería" }));
        cboAlmacen.setName("cboAlmacen"); // NOI18N

        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        cboDescuento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-----------", "Faltantes", "Mal Estado", "Quebrados", "Vencidos", "Cruces" }));
        cboDescuento.setName("cboDescuento"); // NOI18N

        chkResponsable.setText(resourceMap.getString("chkResponsable.text")); // NOI18N
        chkResponsable.setName("chkResponsable"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboDescuento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboAlmacen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkResponsable)
                .addGap(69, 69, 69)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cboAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(chkResponsable)
                    .addComponent(cboDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(resourceMap.getColor("jPanel7.background")); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSalir.setIcon(resourceMap.getIcon("btnSalir.icon")); // NOI18N
        btnSalir.setText(resourceMap.getString("btnSalir.text")); // NOI18N
        btnSalir.setName("btnSalir"); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 658, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(dFechaIni.getDate() == null || dFechaFin.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Seleccione un rango de fechas para mostrar las ventas", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String fIni = sdf.format(dFechaIni.getDate());
            String fFin = sdf.format(dFechaFin.getDate());

            LimpiatTablaVentas();
            jButton1.setEnabled(false);
            listarVentas(fIni, fFin);
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(tablaVentas.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "NO HAY DATOS QUE AGREGAR\nBUSQUE BOLETAS EN UN RANGO DE FECHAS", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else if(cboAlmacen.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN TIPO DE ALMACEN", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else if(cboDescuento.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN TIPO DE DESCUENTO", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }else{
            agregarBoleta();
            cboAlmacen.setSelectedIndex(0);
            cboDescuento.setSelectedIndex(0);
            chkResponsable.setSelected(false);    
        }

        
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        grabaInforme();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        cerrarVentana();
}//GEN-LAST:event_btnSalirActionPerformed

    private void tblVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVentasMouseClicked
        LimpiatTablaVentasDet();
        int fila = tblVentas.getSelectedRow();
        String idVenta = tablaVentas.getValueAt(fila, 0).toString();
        listarVentasDet(idVenta);
    }//GEN-LAST:event_tblVentasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cboAlmacen;
    private javax.swing.JComboBox cboDescuento;
    private javax.swing.JCheckBox chkResponsable;
    private com.toedter.calendar.JDateChooser dFechaFin;
    private com.toedter.calendar.JDateChooser dFechaIni;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lbloculto;
    private javax.swing.JTable tblInforme;
    private javax.swing.JTable tblVentas;
    private javax.swing.JTable tblVentasDet;
    // End of variables declaration//GEN-END:variables

    private void LimpiatTablaVentas() {
        int cant = tblVentas.getRowCount();
        if (cant >= 1) {
            for (int i = cant - 1; i >= 0; i--) {
                tablaVentas.removeRow(i);
            }
        }
    }

    private void LimpiatTablaVentasDet() {
        int cant = tblVentasDet.getRowCount();
        if (cant >= 1) {
            for (int i = cant - 1; i >= 0; i--) {
                tablaVentasDet.removeRow(i);
            }
        }
    }

    private void LimpiatTablaInforme() {
        int cant = tblInforme.getRowCount();
        if (cant >= 1) {
            for (int i = cant - 1; i >= 0; i--) {
                tablaInforme.removeRow(i);
            }
        }
    }

    public void agregarColumnaConCheck() {
        try {
            tablaVentas.addColumn("S");
            for(int i=0;i<tablaVentas.getRowCount();i++) {                
                tablaVentas.setValueAt(false, i, tablaVentas.getColumnCount() -1);//columna booleana
            }
            
        } catch (Exception e) {
            System.err.println("Error manejado en el proceso de agregar columna con check : " + e.getMessage());
            e.printStackTrace();
        }

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(0);
        columnaTablaVenta.setPreferredWidth(55);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(1);
        columnaTablaVenta.setPreferredWidth(80);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(2);
        columnaTablaVenta.setPreferredWidth(40);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(3);
        columnaTablaVenta.setPreferredWidth(90);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(4);
        columnaTablaVenta.setPreferredWidth(50);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(5);
        columnaTablaVenta.setPreferredWidth(35);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(6);
        columnaTablaVenta.setPreferredWidth(50);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(7);
        columnaTablaVenta.setPreferredWidth(30);
    }

    private void construirVentas() {

        tablaVentas.addColumn("INTERNO");
        tablaVentas.addColumn("FECHA");
        tablaVentas.addColumn("SERIE");
        tablaVentas.addColumn("NUMERO");
        tablaVentas.addColumn("S.TOTAL");
        tablaVentas.addColumn("IGV");
        tablaVentas.addColumn("TOTAL");

        tblVentas.setModel(tablaVentas);
        columnaTablaVenta = tblVentas.getColumnModel().getColumn(0);
        columnaTablaVenta.setPreferredWidth(55);
        columnaTablaVenta.setMinWidth(55);
        columnaTablaVenta.setMaxWidth(55);

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(1);
        columnaTablaVenta.setPreferredWidth(80);
        columnaTablaVenta.setMinWidth(80);
        columnaTablaVenta.setMaxWidth(80);

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(2);
        columnaTablaVenta.setPreferredWidth(40);
        columnaTablaVenta.setMinWidth(40);
        columnaTablaVenta.setMaxWidth(40);

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(3);
        columnaTablaVenta.setPreferredWidth(90);
        columnaTablaVenta.setMinWidth(90);
        columnaTablaVenta.setMaxWidth(90);

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(4);
        columnaTablaVenta.setPreferredWidth(50);
        columnaTablaVenta.setMinWidth(50);
        columnaTablaVenta.setMaxWidth(50);

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(5);
        columnaTablaVenta.setPreferredWidth(35);
        columnaTablaVenta.setMinWidth(35);
        columnaTablaVenta.setMaxWidth(35);

        columnaTablaVenta = tblVentas.getColumnModel().getColumn(6);
        columnaTablaVenta.setPreferredWidth(50);
        columnaTablaVenta.setMinWidth(50);
        columnaTablaVenta.setMaxWidth(50);

    }

    private void listarVentas(String fIni, String fFin) {
         try {
                /*llenar detalle del cruce - tablas cargos, descargos y diferencia*/
                listaVentas = logicaCruce.ListaVentasInv(fIni, fFin);

                if(listaVentas.size() > 0) {
                    for(Venta ventas : listaVentas) {;

                        Object [][] datosVentas = {{
                            ventas.getId_Venta(),
                            ventas.getFecha_Venta(),
                            ventas.getSerie(),
                            ventas.getNumero(),
                            ventas.getSubTotal(),
                            ventas.getIGV(),
                            ventas.getTotal()
                            
                        }};

                        if (tablaVentas == null) {
                            tablaVentas = new ModeloTabla() {

                                @Override
                                public boolean isCellEditable(int fila, int columna) {
                                    if (columna == tablaVentas.getColumnCount() - 1) {
                                        return true;
                                    } else {
                                        return false;
                                    }
                                }
                            };
                            tblVentas.setModel(tablaVentas);
                        } else {
                            tablaVentas.addRow(datosVentas[0]);
                        }
                    }

                agregarColumnaConCheck();


                }else {
                    JOptionPane.showMessageDialog(this, "No hay ventas de inventarios en ese rango de fechas", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    jButton1.setEnabled(true);

                }

        } catch (Exception e) {
            System.out.println("Error al listar las ventas "+e);
        }
    }

    private void construirVentasDet() {

        tablaVentasDet.addColumn("ID VENTA DET");
        tablaVentasDet.addColumn("CODIGO");
        tablaVentasDet.addColumn("DESCRIPCION");
        tablaVentasDet.addColumn("LABO");
        tablaVentasDet.addColumn("UNID");
        tablaVentasDet.addColumn("FRAC");
        tablaVentasDet.addColumn("PVP");
        tablaVentasDet.addColumn("TOTAL");

        tblVentasDet.setModel(tablaVentasDet);
        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(0);
        columnaTablaVentaDet.setPreferredWidth(0);
        columnaTablaVentaDet.setMinWidth(0);
        columnaTablaVentaDet.setMaxWidth(0);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(1);
        columnaTablaVentaDet.setPreferredWidth(0);
        columnaTablaVentaDet.setMinWidth(0);
        columnaTablaVentaDet.setMaxWidth(0);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(2);
        columnaTablaVentaDet.setPreferredWidth(150);
        columnaTablaVentaDet.setMinWidth(150);
        columnaTablaVentaDet.setMaxWidth(150);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(3);
        columnaTablaVentaDet.setPreferredWidth(40);
        columnaTablaVentaDet.setMinWidth(40);
        columnaTablaVentaDet.setMaxWidth(40);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(4);
        columnaTablaVentaDet.setPreferredWidth(40);
        columnaTablaVentaDet.setMinWidth(40);
        columnaTablaVentaDet.setMaxWidth(40);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(5);
        columnaTablaVentaDet.setPreferredWidth(40);
        columnaTablaVentaDet.setMinWidth(40);
        columnaTablaVentaDet.setMaxWidth(40);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(6);
        columnaTablaVentaDet.setPreferredWidth(40);
        columnaTablaVentaDet.setMinWidth(40);
        columnaTablaVentaDet.setMaxWidth(40);

        columnaTablaVentaDet = tblVentasDet.getColumnModel().getColumn(6);
        columnaTablaVentaDet.setPreferredWidth(50);
        columnaTablaVentaDet.setMinWidth(50);
        columnaTablaVentaDet.setMaxWidth(50);
    }

    private void listarVentasDet(String idVenta) {
         try {
                /*llenar detalle del cruce - tablas cargos, descargos y diferencia*/
                listaVentasDet = logicaCruce.ListaVentasInvDetalle(idVenta);

                if(listaVentasDet.size() > 0) {
                    for(Venta ventas : listaVentasDet) {;

                        Object [][] datosVentas = {{
                            ventas.getId_Venta(),
                            ventas.getId_Producto(),
                            ventas.getDescr_Producto(),
                            ventas.getId_Laboratorio(),
                            ventas.getUnidad(),
                            ventas.getFraccion(),
                            ventas.getPrecio_Venta_Final(),
                            ventas.getTotal_producto()

                        }};

                        if (tablaVentasDet == null) {
                            tablaVentasDet = new ModeloTabla() {

                                @Override
                                public boolean isCellEditable(int fila, int columna) {
                                    if (columna == 8) {
                                        return true;
                                    } else {
                                        return false;
                                    }
                                }
                            };

                            tblVentasDet.setModel(tablaVentasDet);
                        } else {
                            tablaVentasDet.addRow(datosVentas[0]);
                        }
                    }
                }else {
                    JOptionPane.showMessageDialog(this, "Error al optener el detalle de ventas", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }

        } catch (Exception e) {
            System.out.println("Error al listar el detalle "+e);
        }
    }

    private void construirVentasInf() {
        tablaInforme.addColumn("Nº");
        tablaInforme.addColumn("SERIE");
        tablaInforme.addColumn("NUMERO");
        tablaInforme.addColumn("INTERNO");
        tablaInforme.addColumn("TOTAL");
        tablaInforme.addColumn("ALMACEN");
        tablaInforme.addColumn("DESCUENTO");
        tablaInforme.addColumn("RESPONSABLE");

        tblInforme.setModel(tablaInforme);
        columnaTablaInforme = tblInforme.getColumnModel().getColumn(0);
        columnaTablaInforme.setPreferredWidth(30);
        columnaTablaInforme.setMinWidth(30);
        columnaTablaInforme.setMaxWidth(30);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(1);
        columnaTablaInforme.setPreferredWidth(50);
        columnaTablaInforme.setMinWidth(50);
        columnaTablaInforme.setMaxWidth(50);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(2);
        columnaTablaInforme.setPreferredWidth(90);
        columnaTablaInforme.setMinWidth(90);
        columnaTablaInforme.setMaxWidth(90);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(3);
        columnaTablaInforme.setPreferredWidth(70);
        columnaTablaInforme.setMinWidth(70);
        columnaTablaInforme.setMaxWidth(70);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(4);
        columnaTablaInforme.setPreferredWidth(50);
        columnaTablaInforme.setMinWidth(50);
        columnaTablaInforme.setMaxWidth(50);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(5);
        columnaTablaInforme.setPreferredWidth(80);
        columnaTablaInforme.setMinWidth(80);
        columnaTablaInforme.setMaxWidth(80);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(6);
        columnaTablaInforme.setPreferredWidth(80);
        columnaTablaInforme.setMinWidth(80);
        columnaTablaInforme.setMaxWidth(80);

        columnaTablaInforme = tblInforme.getColumnModel().getColumn(7);
        columnaTablaInforme.setPreferredWidth(0);
        columnaTablaInforme.setMinWidth(0);
        columnaTablaInforme.setMaxWidth(0);
    }

    private void agregarBoleta() {

        for(int i=0 ; i<=tablaVentas.getRowCount()-1 ; i++) {
            String check = tblVentas.getValueAt(i, tablaVentas.getColumnCount() -1).toString();
            if(check == "true") {
               
                int num = tablaInforme.getRowCount()+1;
                String serie = tablaVentas.getValueAt(i, 2).toString();
                String numer = tablaVentas.getValueAt(i, 3).toString();
                String inter = tablaVentas.getValueAt(i, 0).toString();
                String total = tablaVentas.getValueAt(i, 6).toString();
                String almac = cboAlmacen.getSelectedItem().toString();
                String descu = cboDescuento.getSelectedItem().toString();
                int esRespon;
                if(chkResponsable.isSelected()) {
                    esRespon = 1;
                }else {
                    esRespon = 0;
                }

                Object [][] datos = {{ num, serie,numer,inter,total,almac,descu,esRespon }};

                if (tablaInforme == null) {
                    tablaInforme = new ModeloTabla() {

                        @Override
                        public boolean isCellEditable(int fila, int columna) {
                            if (columna == 11) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    };

                    tblInforme.setModel(tablaInforme);
                } else {
                    tablaInforme.addRow(datos[0]);
                    
                }
                
            }else{
                
            }
        }

        int contadorFilas = tablaVentas.getRowCount() -1;
        int i;
        for( i=0 ; i<=contadorFilas ; i++) {
            if(i >= contadorFilas+1){
               // System.out.println("i es > contador de filas");
            }else if(tablaVentas.getRowCount() <= i){
               // System.out.println("# de filas("+tablaVentas.getRowCount()+") = i ("+i+")");
            }else{
                String check = tablaVentas.getValueAt(i, tablaVentas.getColumnCount() -1).toString();

                if(check == "true") {
                    tablaVentas.removeRow(i);
                    i = i - 1 ;
                }
            }
        }
        LimpiatTablaVentasDet();
    }

    private void grabaInforme() {

        try {
            int filasInforme = tblInforme.getRowCount()-1;

            // para el Informe
            if (logicaCruce.InsertaVentaInforme()) {}

            for(int j = 0 ; j <= filasInforme ; j ++ ){
                // para el Informe Detalle
                    String idVenta = tblInforme.getValueAt(j, 3).toString();
                    String tipAlma = tblInforme.getValueAt(j, 5).toString();
                    String tipDesc = tblInforme.getValueAt(j, 6).toString();
                    int esResponsa = Integer.parseInt(tblInforme.getValueAt(j, 7).toString());


                    if(logicaCruce.InsertaVentaInformeDet(idVenta,tipAlma,tipDesc,esResponsa)) {}

            }

            JOptionPane.showMessageDialog(this, "Se guardo satisfactoriamente el informe", "NORTFARMA", JOptionPane.INFORMATION_MESSAGE);
            obtenerUltimoCruce();
            imprimeInforme();
            LimpiatTablaInforme();
            LimpiatTablaVentas();
            LimpiatTablaVentasDet();
            jButton1.setEnabled(true);
        }catch(Exception ex) {
            System.out.println("Error al insertar informe "+ex.toString());
        }
    }

    private void obtenerUltimoCruce() {
        try {
                Statement comando=conex.createStatement();
                ResultSet registro = comando.executeQuery("select if((select count(id_informe) from informeInv) is null , 0 , (select id_informe  from informeInv where id_informe = (select count(id_informe)  from informeInv))) as 'id_informe' ;");
                if (registro.next()==true) {
                        lbloculto.setText(registro.getString("id_informe"));
                } else {
                        lblCodigo.setText("1");
                }
        } catch(SQLException ex){
                System.out.println("Error al mostrar el ultimo cruce"+ex.toString());
        }

    }

    private void obtenerProximoInforme() {
        try {
                Statement comando=conex.createStatement();
                ResultSet registro = comando.executeQuery("select concat('INF',lpad(id_informe+1,5,'0')) as 'codInforme' from informeInv where id_informe = (select count(id_informe) from informeInv);");
                if (registro.next()==true) {
                        lblCodigo.setText(registro.getString("codInforme"));
                } else {
                        lblCodigo.setText("INF00001");
                }
        } catch(SQLException ex){
                System.out.println("Error al mostrar el ultimo informe"+ex.toString());
        }

    }

    public void imprimeInforme()  {
        String sistema = "Windows";

        try {
            //con = logconex.RetornaConexion();
            parameters.put("vInforme", lbloculto.getText());

            if (obj.getsSistemaOperativo().indexOf(sistema) != -1) {
                parameters.put("SUBREPORT_DIR", "Reportes/");
            } else {
                parameters.put("SUBREPORT_DIR", "Reportes/");
            }

            report_file = this.getClass().getResource("/Reportes/rptInformeInv.jasper");

            masterReport = (JasperReport) JRLoader.loadObject(report_file);
            jasperPrint = JasperFillManager.fillReport(masterReport, parameters, con);
            JasperViewer view = new JasperViewer(jasperPrint, false);
            view.setTitle("INFORME DE INVENTARIOS");
            view.setVisible(true);
            view.setSize(850, 850);

           // con.close();
        } catch (JRException ex) {
            System.out.println("Error de reporte "+ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al generar el reporte", "Error ", JOptionPane.ERROR_MESSAGE);
        }

    }

}
