/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GuiaDeAjusteMov.java
 *
 * Created on 26/04/2015, 12:38:23 PM
 */

package sistemanortfarma;

import CapaLogica.LogicaFechaHora;
import CapaLogica.LogicaGuias;
import CapaLogica.LogicaProducto;
import CapaLogica.LogicaProveedor;
import CapaLogica.LogicaTipoMovimiento;
import entidad.Boticas;
import entidad.Guias;
import entidad.Movimiento_Detalle;
import entidad.Movimientos;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.apache.poi.hssf.model.Model;

/**
 *
 * @author Kelvin
 */
public class GuiaDeAjusteMov extends javax.swing.JDialog{

    JTable tablaGuia;
    GuiaDeAjustes objGuia;
    public ModeloTabla modeloTabla;
    MiModelo modeloTabla_2;
    MiModelo modeloTabla_3;
    TableColumn columnaTabla = null;
    LogicaTipoMovimiento objTipoMovimiento = new LogicaTipoMovimiento();
    LogicaProveedor objProveedor = new LogicaProveedor();
    LogicaFechaHora objFechaHora = new LogicaFechaHora();
    LogicaProducto objProducto = new LogicaProducto();
    String idbotica;
    JLabel numDoc;
    JLabel tipAlm;
    JLabel tipMov;
    JTable jTable2;
    JTable jTable3;
    private String fecha1;
    private String fecha2;
    private int opcion;
    private String documento;
    VerificaSistema obj;
    Guias entidadGuias = new Guias();
    LogicaGuias objGuias = new LogicaGuias();
    Movimientos movimiento = new Movimientos();
    List<Movimiento_Detalle> listaDetalle = new ArrayList<Movimiento_Detalle>();
    Object[] datosDetalle2 = new Object[7];
    Object[] datosDetalle3 = new Object[2];
    TableColumn colu;
    int cuentaDatos;

    /** Creates new form GuiaDeAjusteMov */
    public GuiaDeAjusteMov(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    GuiaDeAjusteMov(GuiaDeAjustes objGuiaAjuste, JTable tabla, TableModel modelo2,String id_Botica, JLabel almacen, JLabel movi, JLabel numDocu, JTable tabla3, TableModel modelo3) {
        initComponents();
        jTable2 = tabla;
        jTable3 = tabla3;
        objGuia = objGuiaAjuste;
        tablaGuia = tabla;
        modeloTabla = new ModeloTabla();
        cuentaDatos = tabla.getRowCount();
        //AparienciaTabla();
        //AparienciaTabla2();
        construirGuia();
        if(cuentaDatos > 0) {
            modeloTabla_2 = (MiModelo) modelo2 ;
            modeloTabla_3 = (MiModelo) modelo3 ;
        }else {
            generarCabeceras_2();
            generarCabeceras_3();
        }
        
        
        opcion = 0;
        documento = "";
        idbotica = id_Botica;
        Date date = new Date();
        jDateChooser1.setDate(date);
        jDateChooser2.setDate(date);
        Oculta(false);
        numDoc = numDocu;
        tipAlm = almacen;
        tipMov = movi;
        listarMov();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sistemanortfarma.SistemaNortfarmaApp.class).getContext().getResourceMap(GuiaDeAjusteMov.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel1.border.titleFont"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Documento", "", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setName("jPanel3"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jDateChooser1.setName("jDateChooser1"); // NOI18N

        jDateChooser2.setName("jDateChooser2"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jLabel2)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        enviarDatosDetalle();
}//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        listarMov();
}//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GuiaDeAjusteMov dialog = new GuiaDeAjusteMov(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

     private void listarMov() {
        List<Guias> listGuias = new ArrayList<Guias>();
        LimpiatTabla();
        opcion = 1;
        fecha1 = objFechaHora.ConvierteFecha(this.jDateChooser1.getDate());
        fecha2 = objFechaHora.ConvierteFecha(this.jDateChooser2.getDate());
        documento = this.jTextField1.getText().trim() + '%';
        listGuias = objGuias.RecuperaTodosLosMovimientos(opcion, idbotica, fecha1, fecha2, documento);

        for (int inicio = 0; inicio < listGuias.size(); inicio++) {
            Object[][] data = {
                {
                    listGuias.get(inicio).getId_Botica().toString(),
                    listGuias.get(inicio).getId_TipoAlmacen().toString(),
                    listGuias.get(inicio).getId_Proveedor().toString(),
                    listGuias.get(inicio).getMovimiento().toString(),
                    listGuias.get(inicio).getNumero_Documento().toString(),
                    listGuias.get(inicio).getFecha_Registro().toString(),
                    listGuias.get(inicio).getApellido().toString(),
                    listGuias.get(inicio).getId_TipoMovimiento().toString()

                }
            };

            modeloTabla.addRow(data[0]);
        }
    }

    private void LimpiatTabla() {
        for (Integer i = 0; i < modeloTabla.getRowCount();) {
            modeloTabla.removeRow(i);
        }
    }

    private void enviarDatosDetalle() {
        int fila = jTable1.getSelectedRow();

        String numD = jTable1.getValueAt(fila, 4).toString();
        String tipA = jTable1.getValueAt(fila, 1).toString();
        String tipM = jTable1.getValueAt(fila, 3).toString();

        numDoc.setText(numD);
        tipAlm.setText(tipA);
        tipMov.setText(tipM);



        if (fila >= 0) {

            if(cuentaDatos > 0) {
                
            }else {
                LimpiatTabla_2();
            }



            int cant = 1;
            String idbotica = this.jTable1.getValueAt(fila, 0).toString();
            String almacen = this.jTable1.getValueAt(fila, 1).toString();
            String proveedor = this.jTable1.getValueAt(fila, 2).toString();
            String documento = this.jTable1.getValueAt(fila, 4).toString();
            String IdTipoMov = this.jTable1.getValueAt(fila, 7).toString();
            
            Boticas botica = new Boticas();
            botica.setId_Botica(idbotica);
            movimiento.setBotica(botica);
            movimiento.setId_TipoAlmacen(almacen);
            movimiento.setId_Proveedor(proveedor);
            movimiento.setTipo_movimiento(IdTipoMov);
            movimiento.setNumero_Documento(documento);

            //listaDetalle.removeAll(listaDetalle);
            listaDetalle = objTipoMovimiento.Recupera_Movimiento_Detalle(movimiento);

            datosDetalle3[0] = tipM;
            datosDetalle3[1] = numD;
            modeloTabla_3.addRow(datosDetalle3);

            if (listaDetalle.size() > 0) {

                for (Movimiento_Detalle detalle : listaDetalle) {
                    datosDetalle2[0] = cant;
                    datosDetalle2[1] = detalle.getId_Producto().getIdProducto();
                    datosDetalle2[2] = detalle.getId_Producto().getDescripcion();
                    datosDetalle2[3] = detalle.getId_Producto().getLaboratorio().getId_Lab();
                    datosDetalle2[4] = detalle.getUnidad();
                    datosDetalle2[5] = detalle.getFraccion();
                    datosDetalle2[6] = detalle.getTotal();
                    cant++;
                    modeloTabla_2.addRow(datosDetalle2);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null,"PORFAVOR SELECCIONE UN MOVIMIENTO", "OK",JOptionPane.ERROR_MESSAGE);
        }

        this.dispose();
    }

    private void generarCabeceras_3() {
        modeloTabla_3 = new MiModelo();
        modeloTabla_3.addColumn("MOVIMIENTO");
        modeloTabla_3.addColumn("NUMERO");
        jTable3.setModel(modeloTabla_3);
//        AparienciaTabla3();
    }


    public class ModeloTabla extends DefaultTableModel {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    }

    private void AparienciaTabla() {
        JTableHeader cabecera = new JTableHeader(this.jTable1.getColumnModel());
        cabecera.setReorderingAllowed(false);
    }

    private void Oculta(boolean valor) {
        jLabel1.setVisible(valor);
    }

    private void construirGuia() {

        modeloTabla.addColumn("BOTICA");
        modeloTabla.addColumn("ALMA");
        modeloTabla.addColumn("PROVEEDOR");
        modeloTabla.addColumn("MOVIMIENTO");
        modeloTabla.addColumn("DOCUMENTO");
        modeloTabla.addColumn("FECHA");
        modeloTabla.addColumn("RESPONSABLE");
        modeloTabla.addColumn("itTipoMov");


        jTable1.setModel(modeloTabla);
        columnaTabla = jTable1.getColumnModel().getColumn(0);
        columnaTabla.setPreferredWidth(50);
        columnaTabla.setMinWidth(50);
        columnaTabla.setMaxWidth(50);

        columnaTabla = jTable1.getColumnModel().getColumn(1);
        columnaTabla.setPreferredWidth(90);
        columnaTabla.setMinWidth(90);
        columnaTabla.setMaxWidth(90);

        columnaTabla = jTable1.getColumnModel().getColumn(2);
        columnaTabla.setPreferredWidth(90);
        columnaTabla.setMinWidth(90);
        columnaTabla.setMaxWidth(90);

        columnaTabla = jTable1.getColumnModel().getColumn(4);
        columnaTabla.setPreferredWidth(90);
        columnaTabla.setMinWidth(90);
        columnaTabla.setMaxWidth(90);

        columnaTabla = jTable1.getColumnModel().getColumn(5);
        columnaTabla.setPreferredWidth(90);
        columnaTabla.setMinWidth(90);
        columnaTabla.setMaxWidth(90);

        columnaTabla = jTable1.getColumnModel().getColumn(6);
        columnaTabla.setPreferredWidth(200);
        columnaTabla.setMinWidth(200);
        columnaTabla.setMaxWidth(200);

        columnaTabla = jTable1.getColumnModel().getColumn(7);
        columnaTabla.setPreferredWidth(0);
        columnaTabla.setMinWidth(0);
        columnaTabla.setMaxWidth(0);


    }

    private void generarCabeceras_2() {
        modeloTabla_2 = new MiModelo();
        modeloTabla_2.addColumn("Nº");
        modeloTabla_2.addColumn("Cod");
        modeloTabla_2.addColumn("Producto");
        modeloTabla_2.addColumn("Lab");
        modeloTabla_2.addColumn("Und");
        modeloTabla_2.addColumn("Fracc");
        modeloTabla_2.addColumn("Total");
        jTable2.setModel(modeloTabla_2);
        AparienciaTabla2();
    }

    private void AparienciaTabla2() {
        try {

            DefaultTableCellRenderer tcenter = new DefaultTableCellRenderer();
            tcenter.setHorizontalAlignment(SwingConstants.CENTER);
            jTable2.getColumnModel().getColumn(5).setCellRenderer(tcenter);
            jTable2.getColumnModel().getColumn(4).setCellRenderer(tcenter);
            DefaultTableCellRenderer tcenter1 = new DefaultTableCellRenderer();
            tcenter1.setHorizontalAlignment(SwingConstants.RIGHT);
            jTable2.getColumnModel().getColumn(6).setCellRenderer(tcenter1);

            colu = jTable2.getColumnModel().getColumn(0);
            colu.setPreferredWidth(70);
            colu.setMinWidth(70);
            colu.setMaxWidth(70);
            colu = jTable2.getColumnModel().getColumn(1);
            colu.setPreferredWidth(80);
            colu.setMinWidth(80);
            colu.setMaxWidth(80);
            colu = jTable2.getColumnModel().getColumn(2);
            colu.setPreferredWidth(380);
            colu.setMinWidth(380);
            colu.setMaxWidth(380);
            colu = jTable2.getColumnModel().getColumn(3);
            colu.setPreferredWidth(80);
            colu.setMinWidth(80);
            colu.setMaxWidth(80);
            colu = jTable2.getColumnModel().getColumn(4);
            colu.setPreferredWidth(80);
            colu.setMinWidth(80);
            colu.setMaxWidth(80);
            colu = jTable2.getColumnModel().getColumn(5);
            colu.setPreferredWidth(80);
            colu.setMinWidth(80);
            colu.setMaxWidth(80);
            colu = jTable2.getColumnModel().getColumn(6);
            colu.setPreferredWidth(80);
            colu.setMinWidth(80);
            colu.setMaxWidth(80);

        } catch (Exception ex) {
            System.out.println("ERRORrrrrr :" + ex.getMessage());
        }

    }

    private void LimpiatTabla_2() {
        int cant = this.jTable2.getRowCount();
        if (cant >= 1) {
            for (int i = cant - 1; i >= 0; i--) {
                modeloTabla_2.removeRow(i);
            }
        }
    }


}
