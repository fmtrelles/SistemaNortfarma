package sistemanortfarma;


import CapaLogica.LogicaHorariosTrabajadores;
import entidad.Horario_Trabajo;
import entidad.Personal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJDialog.java
 *
 * Created on 15-abr-2014, 19:23:49
 */

/**
 *
 * @author MAX
 */
public class JdAgregarHorario extends javax.swing.JDialog {

    /** Creates new form NewJDialog */
    public JdAgregarHorario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        jFormattedTextField1.setText("00:00:00");
        jFormattedTextField2.setText("00:00:00");
        jFormattedTextField3.setText("00:00:00");
        jFormattedTextField4.setText("00:00:00");

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtextbuscar = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Nuevo Horario"));

        jLabel1.setText("Apellidos");

        jtextbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextbuscarActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres", "Apellidos", "DNI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtextbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtextbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Hora Entrada :");

        jCheckBox2.setText("Turno 2");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Hora Salida :");

        jLabel2.setText("Hora Entrada :");

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setEnabled(false);
        jFormattedTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField1FocusLost(evt);
            }
        });
        jFormattedTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField1KeyPressed(evt);
            }
        });

        try {
            jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField2.setEnabled(false);
        jFormattedTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField2FocusLost(evt);
            }
        });
        jFormattedTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField2KeyPressed(evt);
            }
        });

        try {
            jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField3.setEnabled(false);
        jFormattedTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField3FocusLost(evt);
            }
        });
        jFormattedTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField3KeyPressed(evt);
            }
        });

        try {
            jFormattedTextField4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField4.setEnabled(false);
        jFormattedTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField4FocusLost(evt);
            }
        });

        jCheckBox1.setText("Turno 1");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Hora Salida :");

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFormattedTextField1)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton3)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextField4)))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()==true){
            jFormattedTextField1.setEnabled(true);
            jFormattedTextField2.setEnabled(true);
        }
        else {
            jFormattedTextField1.setEnabled(false);
            jFormattedTextField2.setEnabled(false);
            jFormattedTextField1.setText("00:00:00");
            jFormattedTextField2.setText("00:00:00");

        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(jTable1.getSelectedRow() < 0) {
           JOptionPane.showMessageDialog(null, "SELECCIONE UN TRABAJADOR \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()==false ){
              JOptionPane.showMessageDialog(null, "Es Necesario que Ingrese Horarios \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
              return; 
            }
            
            if (jCheckBox1.isSelected() && (jFormattedTextField1.getText().equals("00:00:00") || jFormattedTextField2.getText().equals("00:00:00")) ){
                JOptionPane.showMessageDialog(null, "TURNO1 : Hora Entrada / Hora Salida no puede ser 0 \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                return;
            }else if (jCheckBox2.isSelected() && (jFormattedTextField3.getText().equals("00:00:00") || jFormattedTextField4.getText().equals("00:00:00")) ){
                JOptionPane.showMessageDialog(null, "TURNO2 : Hora Entrada / Hora Salida no puede ser 0 \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                return;
            }else{
            String dni=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
            int p = JOptionPane.showConfirmDialog(null, "¿Esta seguro de Guardar este Horario?\n Total de Horas: "+calcularHoras(), "Confirmar",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (p == JOptionPane.YES_OPTION) {
                if(ValidarHoras1(jFormattedTextField1.getText(),jFormattedTextField2.getText())==false && jCheckBox1.isSelected()== true){
                    JOptionPane.showMessageDialog(null, "TURNO1 : Hora Entrada es mayor que Hora salida \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(ValidarHoras1(jFormattedTextField3.getText(),jFormattedTextField4.getText())==false && jCheckBox2.isSelected()== true ){
                    JOptionPane.showMessageDialog(null, "TURNO2 : Hora Entrada es mayor que Hora salida \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(ValidarHoras1(jFormattedTextField2.getText(),jFormattedTextField3.getText())==false && CheckSeleccionados()== true){
                    JOptionPane.showMessageDialog(null, "Hora Entrada Turno 2, es menor que Hora salida Turno 1 \n ", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
                Horario_Trabajo ht=new Horario_Trabajo();
                ht.setT1_H_Entrada(jFormattedTextField1.getText());
                ht.setT1_H_Salida(jFormattedTextField2.getText());
                if(jCheckBox2.isSelected()==false)
                    ht.setT2_H_Entrada("00:00:00");
                else ht.setT2_H_Entrada(jFormattedTextField3.getText());
                if(jCheckBox2.isSelected()==false)
                    ht.setT2_H_Salida("00:00:00");
                else ht.setT2_H_Salida(jFormattedTextField4.getText());
                String cadena= lh.Nuevo_Horario_trabajo(dni, ht);
                JOptionPane.showMessageDialog(null,cadena , "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                if(!cadena.equals("ERROR : El usuario ya se encuentra registrado"))
                    this.dispose();
            }
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ListarPersonal(jtextbuscar.getText());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtextbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextbuscarActionPerformed
        ListarPersonal(jtextbuscar.getText());
    }//GEN-LAST:event_jtextbuscarActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if(jCheckBox2.isSelected()==true){
            jFormattedTextField3.setEnabled(true);
            jFormattedTextField4.setEnabled(true);
        }
        else {
            jFormattedTextField3.setEnabled(false);
            jFormattedTextField4.setEnabled(false);
            jFormattedTextField3.setText("00:00:00");
            jFormattedTextField4.setText("00:00:00");
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jFormattedTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField1FocusLost
        jFormattedTextField1.setText(CompletarEspacios(jFormattedTextField1.getText()));
}//GEN-LAST:event_jFormattedTextField1FocusLost

    private void jFormattedTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField1KeyPressed
        if(evt.getKeyCode()==10){
            jFormattedTextField1.setText(CompletarEspacios(jFormattedTextField1.getText()));
            jFormattedTextField2.requestFocus();
        }
}//GEN-LAST:event_jFormattedTextField1KeyPressed

    private void jFormattedTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField2FocusLost
        jFormattedTextField2.setText(CompletarEspacios(jFormattedTextField2.getText()));
}//GEN-LAST:event_jFormattedTextField2FocusLost

    private void jFormattedTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField2KeyPressed
        if(evt.getKeyCode()==10){
            jFormattedTextField2.setText(CompletarEspacios(jFormattedTextField2.getText()));
            jFormattedTextField3.requestFocus();
        }
}//GEN-LAST:event_jFormattedTextField2KeyPressed

    private void jFormattedTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField3FocusLost
        jFormattedTextField3.setText(CompletarEspacios(jFormattedTextField3.getText()));
}//GEN-LAST:event_jFormattedTextField3FocusLost

    private void jFormattedTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField3KeyPressed
        if(evt.getKeyCode()==10){
            jFormattedTextField3.setText(CompletarEspacios(jFormattedTextField3.getText()));
            jFormattedTextField4.requestFocus();
        }
}//GEN-LAST:event_jFormattedTextField3KeyPressed

    private void jFormattedTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField4FocusLost
        jFormattedTextField4.setText(CompletarEspacios(jFormattedTextField4.getText()));
}//GEN-LAST:event_jFormattedTextField4FocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
        String dni=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
        if(lh.VerificaHorarioTrabajoPersona(dni).equals("1"))
            JOptionPane.showMessageDialog(null, "El usuario ya tiene un horario definido");
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
                ""+jTable1.getValueAt(jTable1.getSelectedRow(),1)+
                "  "+jTable1.getValueAt(jTable1.getSelectedRow(),2)
                , javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 12)));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        String dni="";
            if(evt.getKeyCode()==40 ||  evt.getKeyCode()==10){
                if(jTable1.getSelectedRow()==jTable1.getRowCount()-1){
                //jTable1.setRowSelectionInterval(0,0 );
                dni=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
                jTable1.setRowSelectionInterval(jTable1.getRowCount()-2,jTable1.getRowCount()-2 );
            }
            //jTable1.setRowSelectionInterval((jTable1.getSelectedRow() ), (jTable1.getSelectedRow() ));
                else{ jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
                ""+jTable1.getValueAt(jTable1.getSelectedRow()+1,1)+
                "  "+jTable1.getValueAt(jTable1.getSelectedRow()+1,2)
                , javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 12)));
                dni=jTable1.getValueAt(jTable1.getSelectedRow()+1,0).toString();
                }
            LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
            if(lh.VerificaHorarioTrabajoPersona(dni).equals("1"))
                JOptionPane.showMessageDialog(null, "El usuario ya tiene un horario definido");
        }
        else if(evt.getKeyCode()==38 ){
            if(jTable1.getSelectedRow()==0){
//                jTable1.setRowSelectionInterval((jTable1.getSelectedRow()-1),(jTable1.getSelectedRow()-1) );
                dni=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
            }
            //jTable1.setRowSelectionInterval((jTable1.getSelectedRow() ), (jTable1.getSelectedRow() ));
            else{
                jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
            ""+jTable1.getValueAt(jTable1.getSelectedRow()-1,1)+
            "  "+jTable1.getValueAt(jTable1.getSelectedRow()-1,2)
            , javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 12)));
            dni=jTable1.getValueAt(jTable1.getSelectedRow()-1,0).toString();
            }
            LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
            if(lh.VerificaHorarioTrabajoPersona(dni).equals("1"))
                JOptionPane.showMessageDialog(null, "El usuario ya tiene un horario definido");
        }
    }//GEN-LAST:event_jTable1KeyPressed
    private void ListarPersonal(String Busqueda){
        LogicaHorariosTrabajadores lh=new LogicaHorariosTrabajadores();
        List<Personal> listapersonalxx = new ArrayList<Personal>();
        listapersonalxx=lh.ListaPersonalMiBotica(Busqueda);
        DefaultTableModel modelo;
        String titulos[]=new String[3];
        titulos[0]="DNI";
        titulos[1]="Nombres";
        titulos[2]="Apellidos";
        Object valores[][]=new Object[0][titulos.length];
        modelo=new DefaultTableModel(valores,titulos){
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        for (int i = 0; i < listapersonalxx.size(); i++) {
            String nuevafila[]=new String[3];
                 nuevafila[0]=""+listapersonalxx.get(i).getDNI();
                 nuevafila[1]=""+listapersonalxx.get(i).getNombre();
                 nuevafila[2]=""+listapersonalxx.get(i).getApellido();
            modelo.addRow(nuevafila);
        }
        jTable1.setModel(modelo);

    }
    private boolean CheckSeleccionados(){
        if(jCheckBox1.isSelected()==false || jCheckBox2.isSelected()==false)
            return false;
        else return true;
    }
    private String calcularHoras(){
        String car1[]=jFormattedTextField1.getText().split(":");
        int a1=Integer.parseInt(car1[0]);
        int a2=Integer.parseInt(car1[1]);
        int a3=Integer.parseInt(car1[2]);

        String car2[]=jFormattedTextField2.getText().split(":");
        int b1=Integer.parseInt(car2[0]);
        int b2=Integer.parseInt(car2[1]);
        int b3=Integer.parseInt(car2[2]);
        int h=0,m=0,s=0;
        s=b3-a3;
        if(s<0){
            s=59+s;
            m=1;
            }
        m=b2-a2-m;
        if(m<0){
            m=59+m;
            h=1;
        }
        h=b1-a1-h;
        String car3[]=jFormattedTextField3.getText().split(":");
        int c1=Integer.parseInt(car3[0]);
        int c2=Integer.parseInt(car3[1]);
        int c3=Integer.parseInt(car3[2]);

        String car4[]=jFormattedTextField4.getText().split(":");
        int d1=Integer.parseInt(car4[0]);
        int d2=Integer.parseInt(car4[1]);
        int d3=Integer.parseInt(car4[2]);
        int h1=0,m1=0,s1=0;
        s1=d3-c3;
        if(s1<0){
            s1=59+s1;
            m1=1;
            }
        m1=d2-c2-m1;
        if(m1<0){
            m1=59+m1;
            h1=1;
        }
        h1=d1-c1-h1;

        int h2=0,m2=0,s2=0;
        s2=s+s1;
        if(s2>=60){
            s2=s2-60;
            m2=m2+1;
            }
        m2=m2+m+m1;
        if(m2>=60){
            m2=m2-60;
            h2=h2+1;
        }
        h2=h2+h+h1;
        String t=h2+":"+m2+":"+s2;
        return t;
    }
    private boolean ValidarHoras1(String cadena1 , String cadena2){
        String car1[]=cadena1.split(":");
        int a1=Integer.parseInt(car1[0]);
        int a2=Integer.parseInt(car1[1]);
        int a3=Integer.parseInt(car1[2]);

        String car2[]=cadena2.split(":");
        int b1=Integer.parseInt(car2[0]);
        int b2=Integer.parseInt(car2[1]);
        int b3=Integer.parseInt(car2[2]);
        if(cadena2.equals("00:00:00"))
            return true;
        if(a1>b1)
            return false;
        else if(a1== b1){
            if(a2>b2)
                return false;
            else if(a2==b2){
                if(a3>=b3)
                    return false;
            }
        }
        return true;

    }
    public String CompletarEspacios(String cadena){
        String car[]=cadena.split(":");
        if(car[0].trim().length()==1 )
            car[0]="0"+car[0].trim();
        else if(car[0].trim().length()==0)
            car[0]="00";
        else if(Integer.parseInt(car[0])>=24)
            car[0]="00";

        if(car[1].trim().length()==1 )
            car[1]="0"+car[1].trim();
        else if(car[1].trim().length()==0)
            car[1]="00";
        else if(Integer.parseInt(car[1])>=60)
            car[1]="00";

        if(car[2].trim().length()==1 )
            car[2]="0"+car[2].trim();
        else if(car[2].trim().length()==0)
            car[2]="00";
        else if(Integer.parseInt(car[2])>=60)
            car[2]="00";

        return car[0]+""+car[1]+""+car[2];
    }
    
    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                JdAgregarHorario dialog = new JdAgregarHorario(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtextbuscar;
    // End of variables declaration//GEN-END:variables

}
