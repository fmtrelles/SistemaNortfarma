/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReporteAsistencias.java
 *
 * Created on 12/05/2014, 09:55:39 AM
 */

package sistemanortfarma;

import CapaLogica.LogicaConexion;
import CapaLogica.LogicaHorariosTrabajadores;
import entidad.Horario_Trabajo;
import java.net.URL;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author kelvin
 */
public class ReporteAsistencias extends javax.swing.JDialog {

    String[] columnas = {"NOMBRE", "DNI"};
    List<Horario_Trabajo> listaHorarios;
    DefaultTableModel modelo;
    String miboti;
    int mes;
    int anio;
    int id_horario;
    Map parameters = new HashMap();
    String busq;
    VerificaSistema obj;
    JasperReport masterReport = null;
    Connection con;
    JasperPrint jasperPrint;
    URL report_file;
    LogicaConexion logconex = new LogicaConexion();
    LogicaHorariosTrabajadores logicaHorario = new LogicaHorariosTrabajadores();

    /** Creates new form ReporteAsistencias */
    public ReporteAsistencias(java.awt.Frame parent, boolean modal, String botica, int esteMes, int esteAnio, int idHorario) {
        super(parent, modal);
        initComponents();
        miboti = botica;
        mes = esteMes;
        anio = esteAnio;
        con = logconex.RetornaConexion();
        String miBusqueda = txtFiltro.getText();
        busq = miBusqueda;
        this.setLocationRelativeTo(parent);
        id_horario = idHorario;
        ListarPersonalListaHorariosReporte(miboti, mes, anio, busq);
        setSize(418, 190);
        jButton1.setEnabled(false);
        jPanel2.setVisible(false);

        Date dateMin = new Date();
        Date dateMax = new Date();
//        dateMin.setMonth(mes);
//        dateMin.setDate(1);
//        dateMax.setMonth(mes);
//        dateMax.setDate(31);
//        fInicio.setMinSelectableDate(dateMin);
//        fFinal.setMinSelectableDate(dateMin);
//        fInicio.setMaxSelectableDate(dateMax);
//        fFinal.setMaxSelectableDate(dateMax);
        fInicio.setDate(dateMin);
        fFinal.setDate(dateMax);
    }

    private ReporteAsistencias(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chkFechas = new javax.swing.JCheckBox();
        chkGeneral = new javax.swing.JCheckBox();
        chkPersonal = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        fInicio = new com.toedter.calendar.JDateChooser();
        fFinal = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        txtFiltro = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("SELECCIONE FILTRO"));
        jPanel1.setName("jPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sistemanortfarma.SistemaNortfarmaApp.class).getContext().getResourceMap(ReporteAsistencias.class);
        chkFechas.setText(resourceMap.getString("chkFechas.text")); // NOI18N
        chkFechas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chkFechas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        chkFechas.setName("chkFechas"); // NOI18N
        chkFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFechasActionPerformed(evt);
            }
        });

        chkGeneral.setText(resourceMap.getString("chkGeneral.text")); // NOI18N
        chkGeneral.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chkGeneral.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        chkGeneral.setName("chkGeneral"); // NOI18N
        chkGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGeneralActionPerformed(evt);
            }
        });

        chkPersonal.setText(resourceMap.getString("chkPersonal.text")); // NOI18N
        chkPersonal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chkPersonal.setName("chkPersonal"); // NOI18N
        chkPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPersonalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFechas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkPersonal)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkGeneral)
                    .addComponent(chkFechas)
                    .addComponent(chkPersonal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("DATOS DEL REPORTE"));
        jPanel2.setName("jPanel2"); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("FECHA:"));
        jPanel3.setName("jPanel3"); // NOI18N

        fInicio.setName("fInicio"); // NOI18N

        fFinal.setName("fFinal"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(resourceMap.getIcon("jLabel6.icon")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(resourceMap.getIcon("jLabel7.icon")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(fFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fFinal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("TRABAJADOR:"));
        jPanel4.setName("jPanel4"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE", "DNI", "CARGO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setName("tabla"); // NOI18N
        jScrollPane1.setViewportView(tabla);
        tabla.getColumnModel().getColumn(0).setMinWidth(180);

        txtFiltro.setName("txtFiltro"); // NOI18N
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("REPORTE")));
        jPanel5.setName("jPanel5"); // NOI18N

        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFechasActionPerformed
        if(chkFechas.isSelected()) {
            setSize(418, 315);
            chkGeneral.setSelected(false);
            jPanel2.setVisible(true);
            jPanel4.setVisible(false);
            jButton1.setEnabled(true);
        }else{
            setSize(418, 190);
            jPanel2.setVisible(false);
            jButton1.setEnabled(false);
            chkPersonal.setSelected(false);
        }
    }//GEN-LAST:event_chkFechasActionPerformed

    private void chkGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGeneralActionPerformed
        if(chkGeneral.isSelected()) {
            setSize(418, 190);
            jPanel2.setVisible(false);
            chkFechas.setSelected(false);
            chkPersonal.setSelected(false);
            jButton1.setEnabled(true);
        }else{
            jButton1.setEnabled(false);
        }
    }//GEN-LAST:event_chkGeneralActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(chkGeneral.isSelected()) {
            verReporte();
        }else if (chkFechas.isSelected() && chkPersonal.isSelected()) {
            if(fInicio.getDate()!=null) {
                if(fFinal.getDate()!=null) {
                    int valor = fInicio.getDate().compareTo(fFinal.getDate());
                    if(valor<=0) {
                        if(tabla.getSelectedRow()>=0) {
                            verReporte();
                        }else{
                            JOptionPane.showMessageDialog(this, "SELECCIONE UN TRABAJADOR DE LA TABLA", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                        }
                    }else {
                        JOptionPane.showMessageDialog(this, "FECHA INICIAL DEBE SER MENOR QUE LA FINAL, VERIFICAR", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "SELECCIONE FECHA FINAL", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }
            }else {
                JOptionPane.showMessageDialog(this, "SELECCIONE FECHA INICIAL", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
            }
        }else if(chkFechas.isSelected()) {
            if(fInicio.getDate()!=null) {
                if(fFinal.getDate()!=null) {
                    int valor = fInicio.getDate().compareTo(fFinal.getDate());
                    if(valor<=0) {
                            verReporte();
                    }else {
                        JOptionPane.showMessageDialog(this, "FECHA INICIAL DEBE SER MENOR QUE LA FINAL, VERIFICAR", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "SELECCIONE FECHA FINAL", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
                }
            }else {
                JOptionPane.showMessageDialog(this, "SELECCIONE FECHA INICIAL", "NORTFARMA", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        txtFiltro.setText("");
        chkFechas.setSelected(false);
        chkGeneral.setSelected(false);
        this.hide();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chkPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPersonalActionPerformed
        if(chkPersonal.isSelected()) {
            setSize(418, 550);
            chkGeneral.setSelected(false);
            chkFechas.setSelected(true);
            jPanel2.setVisible(true);
            jButton1.setEnabled(true);
            jPanel4.setVisible(true);
        }else{
            setSize(418, 315);
            jPanel2.setVisible(true);
            jPanel4.setVisible(false);
        }
    }//GEN-LAST:event_chkPersonalActionPerformed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        busq = txtFiltro.getText();
        ListarPersonalListaHorariosReporte(miboti, mes, anio, busq);
}//GEN-LAST:event_txtFiltroKeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReporteAsistencias dialog = new ReporteAsistencias(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.inicio();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkFechas;
    private javax.swing.JCheckBox chkGeneral;
    private javax.swing.JCheckBox chkPersonal;
    private com.toedter.calendar.JDateChooser fFinal;
    private com.toedter.calendar.JDateChooser fInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables


    public void inicio() {
        pack();
        setVisible(true);
    }

    private void LimpiarTabla() {
        modelo=(DefaultTableModel)tabla.getModel();
        modelo.setRowCount(0);
    }

    private void ListarPersonalListaHorariosReporte(String bot, int mes, int anio, String busq) {
        listaHorarios = logicaHorario.ListaHorariosReprote(bot, mes, anio, busq);

        if(listaHorarios.size() > 0) {
            LimpiarTabla();
            for(Horario_Trabajo detalle : listaHorarios) {
                
                Object [][] datos = {{
                    detalle.getHorario_Detalle().getPersonal().getApellido() + " " + detalle.getHorario_Detalle().getPersonal().getNombre(),
                    detalle.getHorario_Detalle().getPersonal().getDNI(),
                    detalle.getHorario_Detalle().getRol().getDescripcion()
                }};

                if (modelo == null) {
                    modelo = new DefaultTableModel(datos, columnas) {

                        @Override
                        public boolean isCellEditable(int fila, int columna) {
                            if (columna == 3) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    };
                    tabla.setModel(modelo);
                } else {
                    modelo.addRow(datos[0]);
                }
            }
            
        }
    }

    private void verReporte() {

        String sistema = "Windows";

        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            if(chkFechas.isSelected() && chkPersonal.isSelected()) {
                int mifila = tabla.getSelectedRow();
                int idPersonal = listaHorarios.get(mifila).getHorario_Detalle().getPersonal().getId_Personal();
                parameters.put("vHorario", id_horario);
                parameters.put("id_Personal", idPersonal);
                parameters.put("fInicio", sdf.format(fInicio.getDate()));
                parameters.put("fFinal", sdf.format(fFinal.getDate()));
            }else if(chkFechas.isSelected()) {
                parameters.put("vHorario", id_horario);
                parameters.put("fInicio", sdf.format(fInicio.getDate()));
                parameters.put("fFinal", sdf.format(fFinal.getDate()));
            }else if (chkGeneral.isSelected()) {
                System.out.println("id horario recibido: "+id_horario);
                parameters.put("vHorario", id_horario);
            }

            if (obj.getsSistemaOperativo().indexOf(sistema) != -1) {
                parameters.put("SUBREPORT_DIR", "Reportes/");
            } else {
                parameters.put("SUBREPORT_DIR", "//Reportes//");
            }

            if(chkFechas.isSelected() && chkPersonal.isSelected()) {
                report_file = this.getClass().getResource("/Reportes/HorariosMarcacion_Fecha.jasper");
            }else if(chkFechas.isSelected()) {
                report_file = this.getClass().getResource("/Reportes/HorariosMarcacion_2.jasper");
            }else if(chkGeneral.isSelected()) {
                report_file = this.getClass().getResource("/Reportes/HorariosMarcacion.jasper");
            }

            masterReport = (JasperReport) JRLoader.loadObject(report_file);
            jasperPrint = JasperFillManager.fillReport(masterReport, parameters, con);
            JasperViewer view = new JasperViewer(jasperPrint, false);
            view.setTitle("REPORTE DE ASISTENCIAS");
            view.setVisible(true);
            view.setAlwaysOnTop(true);

        } catch (JRException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al generar el reporte", "Error ", JOptionPane.ERROR_MESSAGE);
        }
    }
}
